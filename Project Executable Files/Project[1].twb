<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20252.25.0514.2217                               -->
<workbook original-version='18.1' source-build='2025.2.0 (20252.25.0514.2217)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='index_of_economic_freedom (data_new)' inline='true' name='federated.0me96kp1oxqt5f1fq1sfs1ern03u' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.0qrb2hr0aclip71053fqs03bo8ln'>
            <connection class='mysql' dbname='data_new' odbc-native-protocol='' one-time-sql='' port='3306' server='localhost' source-charset='' username='root' />
          </named-connection>
        </named-connections>
        <relation connection='mysql.0qrb2hr0aclip71053fqs03bo8ln' name='index_of_economic_freedom' table='[index_of_economic_freedom]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>ï»¿Country_id</remote-name>
            <remote-type>3</remote-type>
            <local-name>[ï»¿Country_id]</local-name>
            <parent-name>[index_of_economic_freedom]</parent-name>
            <remote-alias>ï»¿Country_id</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[index_of_economic_freedom_914685E714E541F3B9D948FDD9A4D853]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country Name]</local-name>
            <parent-name>[index_of_economic_freedom]</parent-name>
            <remote-alias>Country Name</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>262140</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
            <object-id>[index_of_economic_freedom_914685E714E541F3B9D948FDD9A4D853]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[index_of_economic_freedom]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>262140</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
            <object-id>[index_of_economic_freedom_914685E714E541F3B9D948FDD9A4D853]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>World Rank</remote-name>
            <remote-type>3</remote-type>
            <local-name>[World Rank]</local-name>
            <parent-name>[index_of_economic_freedom]</parent-name>
            <remote-alias>World Rank</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[index_of_economic_freedom_914685E714E541F3B9D948FDD9A4D853]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region Rank</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Region Rank]</local-name>
            <parent-name>[index_of_economic_freedom]</parent-name>
            <remote-alias>Region Rank</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[index_of_economic_freedom_914685E714E541F3B9D948FDD9A4D853]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2022 Score</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2022 Score]</local-name>
            <parent-name>[index_of_economic_freedom]</parent-name>
            <remote-alias>2022 Score</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <object-id>[index_of_economic_freedom_914685E714E541F3B9D948FDD9A4D853]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Property Rights</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Property Rights]</local-name>
            <parent-name>[index_of_economic_freedom]</parent-name>
            <remote-alias>Property Rights</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <object-id>[index_of_economic_freedom_914685E714E541F3B9D948FDD9A4D853]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Judical Effectiveness</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Judical Effectiveness]</local-name>
            <parent-name>[index_of_economic_freedom]</parent-name>
            <remote-alias>Judical Effectiveness</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <object-id>[index_of_economic_freedom_914685E714E541F3B9D948FDD9A4D853]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Government Integrity</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Government Integrity]</local-name>
            <parent-name>[index_of_economic_freedom]</parent-name>
            <remote-alias>Government Integrity</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <object-id>[index_of_economic_freedom_914685E714E541F3B9D948FDD9A4D853]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Tax Burden</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Tax Burden]</local-name>
            <parent-name>[index_of_economic_freedom]</parent-name>
            <remote-alias>Tax Burden</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <object-id>[index_of_economic_freedom_914685E714E541F3B9D948FDD9A4D853]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Govt Spending</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Govt Spending]</local-name>
            <parent-name>[index_of_economic_freedom]</parent-name>
            <remote-alias>Govt Spending</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <object-id>[index_of_economic_freedom_914685E714E541F3B9D948FDD9A4D853]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Fiscal Health</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Fiscal Health]</local-name>
            <parent-name>[index_of_economic_freedom]</parent-name>
            <remote-alias>Fiscal Health</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <object-id>[index_of_economic_freedom_914685E714E541F3B9D948FDD9A4D853]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business Freedom</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Business Freedom]</local-name>
            <parent-name>[index_of_economic_freedom]</parent-name>
            <remote-alias>Business Freedom</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <object-id>[index_of_economic_freedom_914685E714E541F3B9D948FDD9A4D853]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Labor Freedom</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Labor Freedom]</local-name>
            <parent-name>[index_of_economic_freedom]</parent-name>
            <remote-alias>Labor Freedom</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <object-id>[index_of_economic_freedom_914685E714E541F3B9D948FDD9A4D853]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Monetary Freedom</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Monetary Freedom]</local-name>
            <parent-name>[index_of_economic_freedom]</parent-name>
            <remote-alias>Monetary Freedom</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <object-id>[index_of_economic_freedom_914685E714E541F3B9D948FDD9A4D853]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Trade Freedom</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Trade Freedom]</local-name>
            <parent-name>[index_of_economic_freedom]</parent-name>
            <remote-alias>Trade Freedom</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <object-id>[index_of_economic_freedom_914685E714E541F3B9D948FDD9A4D853]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Investment Freedom</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Investment Freedom]</local-name>
            <parent-name>[index_of_economic_freedom]</parent-name>
            <remote-alias>Investment Freedom</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[index_of_economic_freedom_914685E714E541F3B9D948FDD9A4D853]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Financial Freedom</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Financial Freedom]</local-name>
            <parent-name>[index_of_economic_freedom]</parent-name>
            <remote-alias>Financial Freedom</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[index_of_economic_freedom_914685E714E541F3B9D948FDD9A4D853]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Tariff Rate (%)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Tariff Rate (%)]</local-name>
            <parent-name>[index_of_economic_freedom]</parent-name>
            <remote-alias>Tariff Rate (%)</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <object-id>[index_of_economic_freedom_914685E714E541F3B9D948FDD9A4D853]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Income Tax Rate (%)</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Income Tax Rate (%)]</local-name>
            <parent-name>[index_of_economic_freedom]</parent-name>
            <remote-alias>Income Tax Rate (%)</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[index_of_economic_freedom_914685E714E541F3B9D948FDD9A4D853]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Corporate Tax Rate (%)</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Corporate Tax Rate (%)]</local-name>
            <parent-name>[index_of_economic_freedom]</parent-name>
            <remote-alias>Corporate Tax Rate (%)</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[index_of_economic_freedom_914685E714E541F3B9D948FDD9A4D853]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Tax Burden % of GDP</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Tax Burden % of GDP]</local-name>
            <parent-name>[index_of_economic_freedom]</parent-name>
            <remote-alias>Tax Burden % of GDP</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <object-id>[index_of_economic_freedom_914685E714E541F3B9D948FDD9A4D853]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Govt Expenditure % of GDP</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Govt Expenditure % of GDP]</local-name>
            <parent-name>[index_of_economic_freedom]</parent-name>
            <remote-alias>Govt Expenditure % of GDP</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <object-id>[index_of_economic_freedom_914685E714E541F3B9D948FDD9A4D853]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population (Millions)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Population (Millions)]</local-name>
            <parent-name>[index_of_economic_freedom]</parent-name>
            <remote-alias>Population (Millions)</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <object-id>[index_of_economic_freedom_914685E714E541F3B9D948FDD9A4D853]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GDP (Billions)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[GDP (Billions)]</local-name>
            <parent-name>[index_of_economic_freedom]</parent-name>
            <remote-alias>GDP (Billions)</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <object-id>[index_of_economic_freedom_914685E714E541F3B9D948FDD9A4D853]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GDP Growth Rate (%)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[GDP Growth Rate (%)]</local-name>
            <parent-name>[index_of_economic_freedom]</parent-name>
            <remote-alias>GDP Growth Rate (%)</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <object-id>[index_of_economic_freedom_914685E714E541F3B9D948FDD9A4D853]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>5 Year GDP Growth Rate (%)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[5 Year GDP Growth Rate (%)]</local-name>
            <parent-name>[index_of_economic_freedom]</parent-name>
            <remote-alias>5 Year GDP Growth Rate (%)</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <object-id>[index_of_economic_freedom_914685E714E541F3B9D948FDD9A4D853]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GDP per Capita (PPP)</remote-name>
            <remote-type>3</remote-type>
            <local-name>[GDP per Capita (PPP)]</local-name>
            <parent-name>[index_of_economic_freedom]</parent-name>
            <remote-alias>GDP per Capita (PPP)</remote-alias>
            <ordinal>28</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[index_of_economic_freedom_914685E714E541F3B9D948FDD9A4D853]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unemployment (%)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Unemployment (%)]</local-name>
            <parent-name>[index_of_economic_freedom]</parent-name>
            <remote-alias>Unemployment (%)</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <object-id>[index_of_economic_freedom_914685E714E541F3B9D948FDD9A4D853]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Inflation (%)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Inflation (%)]</local-name>
            <parent-name>[index_of_economic_freedom]</parent-name>
            <remote-alias>Inflation (%)</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <object-id>[index_of_economic_freedom_914685E714E541F3B9D948FDD9A4D853]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FDI Inflow (Millions)</remote-name>
            <remote-type>3</remote-type>
            <local-name>[FDI Inflow (Millions)]</local-name>
            <parent-name>[index_of_economic_freedom]</parent-name>
            <remote-alias>FDI Inflow (Millions)</remote-alias>
            <ordinal>31</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[index_of_economic_freedom_914685E714E541F3B9D948FDD9A4D853]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Public Debt (% of GDP)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Public Debt (% of GDP)]</local-name>
            <parent-name>[index_of_economic_freedom]</parent-name>
            <remote-alias>Public Debt (% of GDP)</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <object-id>[index_of_economic_freedom_914685E714E541F3B9D948FDD9A4D853]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='real' name='[2022 Score]' role='measure' type='quantitative' />
      <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='integer' name='[GDP per Capita (PPP)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Inflation (%)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Monetary Freedom]' role='measure' type='quantitative' />
      <column datatype='real' name='[Population (Millions)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Unemployment (%)]' role='measure' type='quantitative' />
      <column caption='index_of_economic_freedom' datatype='table' name='[__tableau_internal_object_id__].[index_of_economic_freedom_914685E714E541F3B9D948FDD9A4D853]' role='measure' type='quantitative' />
      <column caption='ï»¿Country id' datatype='integer' name='[ï»¿Country_id]' role='dimension' type='ordinal' />
      <column-instance column='[Population (Millions)]' derivation='Max' name='[max:Population (Millions):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Population (Millions)]' derivation='Min' name='[min:Population (Millions):qk]' pivot='key' type='quantitative' />
      <column-instance column='[2022 Score]' derivation='Sum' name='[sum:2022 Score:qk]' pivot='key' type='quantitative' />
      <column-instance column='[GDP per Capita (PPP)]' derivation='Sum' name='[sum:GDP per Capita (PPP):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Inflation (%)]' derivation='Sum' name='[sum:Inflation (%):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Monetary Freedom]' derivation='Sum' name='[sum:Monetary Freedom:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Population (Millions)]' derivation='Sum' name='[sum:Population (Millions):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Unemployment (%)]' derivation='Sum' name='[sum:Unemployment (%):qk]' pivot='key' type='quantitative' />
      <layout common-percentage='1' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' user-set-layout-v2='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0me96kp1oxqt5f1fq1sfs1ern03u].[sum:Inflation (\%):qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0me96kp1oxqt5f1fq1sfs1ern03u].[sum:GDP per Capita (PPP):qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0me96kp1oxqt5f1fq1sfs1ern03u].[max:Population (Millions):qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0me96kp1oxqt5f1fq1sfs1ern03u].[min:Population (Millions):qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0me96kp1oxqt5f1fq1sfs1ern03u].[sum:Population (Millions):qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0me96kp1oxqt5f1fq1sfs1ern03u].[sum:2022 Score:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0me96kp1oxqt5f1fq1sfs1ern03u].[sum:Monetary Freedom:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0me96kp1oxqt5f1fq1sfs1ern03u].[sum:Unemployment (\%):qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='index_of_economic_freedom' id='index_of_economic_freedom_914685E714E541F3B9D948FDD9A4D853'>
            <properties context=''>
              <relation connection='mysql.0qrb2hr0aclip71053fqs03bo8ln' name='index_of_economic_freedom' table='[index_of_economic_freedom]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='2022 Economic Freedom Score'>
      <table>
        <view>
          <datasources>
            <datasource caption='index_of_economic_freedom (data_new)' name='federated.0me96kp1oxqt5f1fq1sfs1ern03u' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0me96kp1oxqt5f1fq1sfs1ern03u'>
            <column datatype='real' name='[2022 Score]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[2022 Score]' derivation='Sum' name='[sum:2022 Score:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0me96kp1oxqt5f1fq1sfs1ern03u].[sum:2022 Score:qk]' palette='red_green_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0me96kp1oxqt5f1fq1sfs1ern03u].[sum:2022 Score:qk]' />
              <lod column='[federated.0me96kp1oxqt5f1fq1sfs1ern03u].[none:Country Name:nk]' />
              <geometry column='[federated.0me96kp1oxqt5f1fq1sfs1ern03u].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0me96kp1oxqt5f1fq1sfs1ern03u].[Latitude (generated)]</rows>
        <cols>[federated.0me96kp1oxqt5f1fq1sfs1ern03u].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{93C0BEF0-2313-4370-9EC3-BC16D5F9B211}' />
    </worksheet>
    <worksheet name='Bottom Ranking Countries in the Index'>
      <table>
        <view>
          <datasources>
            <datasource caption='index_of_economic_freedom (data_new)' name='federated.0me96kp1oxqt5f1fq1sfs1ern03u' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0me96kp1oxqt5f1fq1sfs1ern03u'>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[World Rank]' role='measure' type='quantitative' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[World Rank]' derivation='None' name='[none:World Rank:qk]' pivot='key' type='quantitative' />
            <column-instance column='[World Rank]' derivation='Sum' name='[sum:World Rank:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0me96kp1oxqt5f1fq1sfs1ern03u].[none:World Rank:qk]' included-values='in-range'>
            <min>127</min>
            <max>177</max>
          </filter>
          <slices>
            <column>[federated.0me96kp1oxqt5f1fq1sfs1ern03u].[none:World Rank:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0me96kp1oxqt5f1fq1sfs1ern03u].[sum:World Rank:qk]' palette='red_green_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0me96kp1oxqt5f1fq1sfs1ern03u].[none:Country Name:nk]' />
              <color column='[federated.0me96kp1oxqt5f1fq1sfs1ern03u].[sum:World Rank:qk]' />
              <geometry column='[federated.0me96kp1oxqt5f1fq1sfs1ern03u].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0me96kp1oxqt5f1fq1sfs1ern03u].[Latitude (generated)]</rows>
        <cols>[federated.0me96kp1oxqt5f1fq1sfs1ern03u].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{6F5CC738-325D-494F-B186-ABEFDD2035C2}' />
    </worksheet>
    <worksheet name='Corelation Between GDP(PPP) And Monetary Freedom'>
      <table>
        <view>
          <datasources>
            <datasource caption='index_of_economic_freedom (data_new)' name='federated.0me96kp1oxqt5f1fq1sfs1ern03u' />
          </datasources>
          <datasource-dependencies datasource='federated.0me96kp1oxqt5f1fq1sfs1ern03u'>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[GDP per Capita (PPP)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Monetary Freedom]' role='measure' type='quantitative' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[GDP per Capita (PPP)]' derivation='Sum' name='[sum:GDP per Capita (PPP):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Monetary Freedom]' derivation='Sum' name='[sum:Monetary Freedom:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0me96kp1oxqt5f1fq1sfs1ern03u].[none:Country Name:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Afghanistan&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Albania&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Angola&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Armenia&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Austria&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Bahrain&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Bangladesh&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Barbados&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Belarus&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Belgium&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Belize&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Benin&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Bhutan&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Bolivia&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Bosnia and Herzegovina&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Botswana&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Brazil&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Brunei Darussalam&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Bulgaria&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Burkina Faso&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Burma&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Burundi&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;CÃ´te d&apos;Ivoire&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Cabo Verde&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Cambodia&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Cameroon&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Canada&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Central African Republic&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Chad&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Chile&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Colombia&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Comoros&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Congo Democratic Republic of the Congo&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Congo Republic of&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Costa Rica&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Croatia&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Cuba&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Cyprus&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Czech Republic&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Denmark&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Djibouti&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Dominica&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Dominican Republic&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Ecuador&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Egypt&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;El Salvador&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Equatorial Guinea&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Eritrea&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Estonia&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Eswatini&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Ethiopia&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Fiji&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Finland&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Gabon&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Gambia&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Georgia&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Ghana&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Greece&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Guatemala&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Guinea&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Guinea-Bissau&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Guyana&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Haiti&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Honduras&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Hungary&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Iceland&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Indonesia&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Iran&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Iraq&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Ireland&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Israel&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Italy&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Jamaica&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Japan&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Jordan&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Kazakhstan&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Kenya&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Kiribati&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Korea North &quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Korea South&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Kosovo&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Kuwait&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Kyrgyz Republic&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Laos&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Latvia&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Lebanon&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Lesotho&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Liberia&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Libya&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Liechtenstein&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Lithuania&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Luxembourg&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Madagascar&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Malawi&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Malaysia&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Maldives&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Mali&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Malta&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Mauritania&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Mauritius&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Mexico&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Moldova&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Morocco&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Mozambique&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Namibia&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Nepal&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Netherlands&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;New Zealand&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Nicaragua&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Niger&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Nigeria&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;North Macedonia&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Norway&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Oman&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Pakistan&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Panama&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Papua New Guinea&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Paraguay&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Peru&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Philippines&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Poland&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Portugal&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Qatar&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Romania&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Russia&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Rwanda&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;SÃ£o TomÃ© and PrÃ­ncipe&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Saint Lucia&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Saint Vincent and the Grenadines&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Samoa&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Saudi Arabia&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Senegal&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Serbia&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Seychelles&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Sierra Leone&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Singapore&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Slovakia&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Slovenia&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Solomon Islands&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Somalia&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;South Africa&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Spain&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Sri Lanka&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Sudan&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Suriname&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Sweden&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Switzerland&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Syria&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Taiwan &quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Tajikistan&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Tanzania&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Thailand&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Timor-Leste&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Togo&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Tonga&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Trinidad and Tobago&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Tunisia&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Turkey&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Turkmenistan&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Uganda&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Ukraine&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;United Arab Emirates&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;United States&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Uruguay&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Uzbekistan&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Vanuatu&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Venezuela&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Vietnam&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Yemen&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Zambia&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Zimbabwe&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0me96kp1oxqt5f1fq1sfs1ern03u].[none:Country Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0me96kp1oxqt5f1fq1sfs1ern03u].[sum:Monetary Freedom:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0me96kp1oxqt5f1fq1sfs1ern03u].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0me96kp1oxqt5f1fq1sfs1ern03u].[sum:GDP per Capita (PPP):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0me96kp1oxqt5f1fq1sfs1ern03u].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0me96kp1oxqt5f1fq1sfs1ern03u].[sum:Monetary Freedom:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0me96kp1oxqt5f1fq1sfs1ern03u].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0me96kp1oxqt5f1fq1sfs1ern03u].[sum:GDP per Capita (PPP):qk] + [federated.0me96kp1oxqt5f1fq1sfs1ern03u].[sum:Monetary Freedom:qk])</rows>
        <cols>[federated.0me96kp1oxqt5f1fq1sfs1ern03u].[none:Country Name:nk]</cols>
      </table>
      <simple-id uuid='{6F348155-54A2-4B6E-B1C8-A6CB0F9032A1}' />
    </worksheet>
    <worksheet name='Corelation Between InflationAnd Unemployment'>
      <table>
        <view>
          <datasources>
            <datasource caption='index_of_economic_freedom (data_new)' name='federated.0me96kp1oxqt5f1fq1sfs1ern03u' />
          </datasources>
          <datasource-dependencies datasource='federated.0me96kp1oxqt5f1fq1sfs1ern03u'>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Inflation (%)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Unemployment (%)]' role='measure' type='quantitative' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Inflation (%)]' derivation='Sum' name='[sum:Inflation (%):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Unemployment (%)]' derivation='Sum' name='[sum:Unemployment (%):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0me96kp1oxqt5f1fq1sfs1ern03u].[none:Country Name:nk]'>
            <groupfilter expression='SUM([Inflation (%)]) &gt;= 10.' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
              <groupfilter function='level-members' level='[none:Country Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0me96kp1oxqt5f1fq1sfs1ern03u].[none:Country Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0me96kp1oxqt5f1fq1sfs1ern03u].[sum:Unemployment (%):qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0me96kp1oxqt5f1fq1sfs1ern03u].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0me96kp1oxqt5f1fq1sfs1ern03u].[sum:Inflation (%):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0me96kp1oxqt5f1fq1sfs1ern03u].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0me96kp1oxqt5f1fq1sfs1ern03u].[sum:Unemployment (%):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0me96kp1oxqt5f1fq1sfs1ern03u].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0me96kp1oxqt5f1fq1sfs1ern03u].[sum:Inflation (%):qk] + [federated.0me96kp1oxqt5f1fq1sfs1ern03u].[sum:Unemployment (%):qk])</rows>
        <cols>[federated.0me96kp1oxqt5f1fq1sfs1ern03u].[none:Country Name:nk]</cols>
      </table>
      <simple-id uuid='{6B1A73B6-F53C-4F3E-8FF5-253C5F9D6FA8}' />
    </worksheet>
    <worksheet name='Index Score Based on 5 Year On  GDP Growth Rate(%)'>
      <table>
        <view>
          <datasources>
            <datasource caption='index_of_economic_freedom (data_new)' name='federated.0me96kp1oxqt5f1fq1sfs1ern03u' />
          </datasources>
          <datasource-dependencies datasource='federated.0me96kp1oxqt5f1fq1sfs1ern03u'>
            <column datatype='real' name='[2022 Score]' role='measure' type='quantitative' />
            <column datatype='real' name='[5 Year GDP Growth Rate (%)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[2022 Score]' derivation='Sum' name='[sum:2022 Score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[5 Year GDP Growth Rate (%)]' derivation='Sum' name='[sum:5 Year GDP Growth Rate (%):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0me96kp1oxqt5f1fq1sfs1ern03u].[none:Country Name:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Afghanistan&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Australia&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Bangladesh&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Barbados&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Belarus&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Belgium&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Belize&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Benin&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Bhutan&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Bolivia&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Bosnia and Herzegovina&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Botswana&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Brazil&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Brunei Darussalam&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Bulgaria&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Burkina Faso&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Burma&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Burundi&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;CÃ´te d&apos;Ivoire&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Cabo Verde&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Cambodia&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Cameroon&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Canada&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Central African Republic&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Chad&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Chile&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Colombia&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Comoros&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Congo Democratic Republic of the Congo&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Congo Republic of&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Costa Rica&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Croatia&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Cuba&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Cyprus&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Czech Republic&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Denmark&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Djibouti&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Dominica&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Dominican Republic&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Ecuador&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Egypt&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;El Salvador&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Equatorial Guinea&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Eritrea&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Estonia&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Eswatini&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Ethiopia&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Fiji&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Finland&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Gabon&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Gambia&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Georgia&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Ghana&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Greece&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Guatemala&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Guinea&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Guinea-Bissau&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Guyana&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Haiti&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Honduras&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Hungary&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Iceland&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Indonesia&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Iran&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Italy&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Japan&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Kazakhstan&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Kenya&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Kiribati&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Korea North &quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Korea South&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Kosovo&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Kuwait&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Kyrgyz Republic&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Laos&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Latvia&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Lesotho&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Liberia&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Liechtenstein&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Lithuania&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Luxembourg&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Madagascar&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Malawi&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Malaysia&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Maldives&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Mali&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Malta&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Mauritania&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Mauritius&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Mexico&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Moldova&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Mongolia&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Montenegro&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Morocco&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Mozambique&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Namibia&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Nepal&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Netherlands&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;New Zealand&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Nicaragua&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Niger&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Nigeria&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;North Macedonia&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Norway&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Oman&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Pakistan&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Panama&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Papua New Guinea&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Paraguay&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Peru&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Philippines&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Poland&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Portugal&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Qatar&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Romania&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Russia&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Rwanda&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;SÃ£o TomÃ© and PrÃ­ncipe&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Saint Lucia&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Saint Vincent and the Grenadines&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Samoa&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Saudi Arabia&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Senegal&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Serbia&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Seychelles&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Sierra Leone&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Singapore&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Slovakia&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Slovenia&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Solomon Islands&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Somalia&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;South Africa&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Spain&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Sri Lanka&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Sudan&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Suriname&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Sweden&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Switzerland&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Syria&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Taiwan &quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Tajikistan&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Tanzania&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Thailand&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Timor-Leste&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Togo&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Tonga&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Trinidad and Tobago&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Tunisia&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Turkey&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Turkmenistan&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Uganda&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Ukraine&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;United Arab Emirates&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;United States&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Uruguay&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Uzbekistan&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Vanuatu&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Venezuela&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Vietnam&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Yemen&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Zambia&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Zimbabwe&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0me96kp1oxqt5f1fq1sfs1ern03u].[none:Country Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0me96kp1oxqt5f1fq1sfs1ern03u].[sum:2022 Score:qk]' palette='orange_gold_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='GanttBar' />
            <encodings>
              <color column='[federated.0me96kp1oxqt5f1fq1sfs1ern03u].[sum:2022 Score:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0me96kp1oxqt5f1fq1sfs1ern03u].[sum:5 Year GDP Growth Rate (%):qk]</rows>
        <cols>[federated.0me96kp1oxqt5f1fq1sfs1ern03u].[none:Country Name:nk]</cols>
      </table>
      <simple-id uuid='{8C1CE946-2349-4785-B07B-1DEC2EC73F59}' />
    </worksheet>
    <worksheet name='Index Score Based on Financial Problem'>
      <table>
        <view>
          <datasources>
            <datasource caption='index_of_economic_freedom (data_new)' name='federated.0me96kp1oxqt5f1fq1sfs1ern03u' />
          </datasources>
          <datasource-dependencies datasource='federated.0me96kp1oxqt5f1fq1sfs1ern03u'>
            <column datatype='real' name='[2022 Score]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Financial Freedom]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[2022 Score]' derivation='Sum' name='[sum:2022 Score:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0me96kp1oxqt5f1fq1sfs1ern03u].[none:Country Name:nk]'>
            <groupfilter expression='SUM([Financial Freedom]) &lt;= 40' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
              <groupfilter function='level-members' level='[none:Country Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0me96kp1oxqt5f1fq1sfs1ern03u].[none:Country Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.0me96kp1oxqt5f1fq1sfs1ern03u].[sum:2022 Score:qk]' />
              <color column='[federated.0me96kp1oxqt5f1fq1sfs1ern03u].[none:Region:nk]' />
              <text column='[federated.0me96kp1oxqt5f1fq1sfs1ern03u].[none:Country Name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{5D8A1180-AE79-47AA-9422-09FACE669BF1}' />
    </worksheet>
    <worksheet name='Index Score Based on Population'>
      <table>
        <view>
          <datasources>
            <datasource caption='index_of_economic_freedom (data_new)' name='federated.0me96kp1oxqt5f1fq1sfs1ern03u' />
          </datasources>
          <datasource-dependencies datasource='federated.0me96kp1oxqt5f1fq1sfs1ern03u'>
            <column datatype='real' name='[2022 Score]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Population (Millions)]' role='measure' type='quantitative' />
            <column-instance column='[Population (Millions)]' derivation='Max' name='[max:Population (Millions):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[2022 Score]' derivation='Sum' name='[sum:2022 Score:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0me96kp1oxqt5f1fq1sfs1ern03u].[none:Country Name:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Iran&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Iraq&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Ireland&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Israel&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Italy&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Jamaica&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Japan&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Korea North &quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Korea South&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Kosovo&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Kyrgyz Republic&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Laos&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Libya&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Lithuania&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Luxembourg&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Madagascar&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Malawi&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Malaysia&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Maldives&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Mali&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Malta&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Montenegro&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Morocco&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Mozambique&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Namibia&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Nepal&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Netherlands&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;New Zealand&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Nicaragua&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Niger&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;North Macedonia&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Norway&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Pakistan&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Panama&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Papua New Guinea&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Paraguay&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Peru&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Philippines&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Poland&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Portugal&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Qatar&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Romania&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Russia&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Rwanda&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;SÃ£o TomÃ© and PrÃ­ncipe&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Saint Lucia&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Saint Vincent and the Grenadines&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Samoa&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Saudi Arabia&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Senegal&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Serbia&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Seychelles&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Sierra Leone&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Singapore&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Slovakia&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Slovenia&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Solomon Islands&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Somalia&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;South Africa&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Spain&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Sri Lanka&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Sudan&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Suriname&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Sweden&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Switzerland&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Syria&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Taiwan &quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Tajikistan&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Tanzania&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Thailand&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Timor-Leste&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Togo&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Tonga&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Trinidad and Tobago&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Tunisia&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Turkey&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Turkmenistan&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Uganda&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Ukraine&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;United Arab Emirates&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;United States&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Uruguay&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Uzbekistan&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Vanuatu&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Venezuela&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Vietnam&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Yemen&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Zambia&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Zimbabwe&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0me96kp1oxqt5f1fq1sfs1ern03u].[none:Country Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0me96kp1oxqt5f1fq1sfs1ern03u].[sum:2022 Score:qk]' palette='orange_gold_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0me96kp1oxqt5f1fq1sfs1ern03u].[sum:2022 Score:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0me96kp1oxqt5f1fq1sfs1ern03u].[none:Country Name:nk]</rows>
        <cols>[federated.0me96kp1oxqt5f1fq1sfs1ern03u].[max:Population (Millions):qk]</cols>
      </table>
      <simple-id uuid='{2443DEB5-A1D1-4027-AA65-37E567377F96}' />
    </worksheet>
    <worksheet name='Index Score based on Unemployment Rate'>
      <table>
        <view>
          <datasources>
            <datasource caption='index_of_economic_freedom (data_new)' name='federated.0me96kp1oxqt5f1fq1sfs1ern03u' />
          </datasources>
          <datasource-dependencies datasource='federated.0me96kp1oxqt5f1fq1sfs1ern03u'>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Inflation (%)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Unemployment (%)]' role='measure' type='quantitative' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Inflation (%)]' derivation='Sum' name='[sum:Inflation (%):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Unemployment (%)]' derivation='Sum' name='[sum:Unemployment (%):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0me96kp1oxqt5f1fq1sfs1ern03u].[none:Country Name:nk]'>
            <groupfilter expression='SUM([Inflation (%)]) &gt;= 10.' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
              <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Afghanistan&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Albania&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Algeria&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Angola&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Argentina&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Armenia&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Australia&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Austria&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Azerbaijan&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Bahamas&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Bahrain&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Bangladesh&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Barbados&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Belarus&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Belgium&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Belize&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Benin&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Bhutan&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Bolivia&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Bosnia and Herzegovina&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Botswana&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Brazil&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Brunei Darussalam&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Bulgaria&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Burkina Faso&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Burma&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Burundi&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;CÃ´te d&apos;Ivoire&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Cabo Verde&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Cambodia&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Cameroon&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Canada&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Central African Republic&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Chad&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Chile&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;China&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Colombia&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Comoros&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Congo Democratic Republic of the Congo&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Congo Republic of&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Costa Rica&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Croatia&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Cuba&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Cyprus&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Czech Republic&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Denmark&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Djibouti&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Dominica&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Dominican Republic&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Ecuador&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Egypt&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;El Salvador&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Equatorial Guinea&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Eritrea&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Estonia&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Eswatini&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Ethiopia&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Fiji&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Finland&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;France&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Gabon&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Gambia&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Georgia&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Germany&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Ghana&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Greece&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Guatemala&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Guinea&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Guinea-Bissau&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Guyana&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Haiti&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Honduras&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Hungary&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Iceland&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;India&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Indonesia&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Iran&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Iraq&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Ireland&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Israel&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Italy&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Jamaica&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Japan&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Jordan&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Kazakhstan&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Kenya&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Kiribati&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Korea North &quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Korea South&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Kosovo&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Kuwait&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Kyrgyz Republic&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Laos&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Latvia&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Lebanon&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Lesotho&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Liberia&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Libya&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Liechtenstein&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Lithuania&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Luxembourg&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Madagascar&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Malawi&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Malaysia&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Maldives&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Mali&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Malta&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Mauritania&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Mauritius&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Mexico&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Moldova&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Mongolia&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Montenegro&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Morocco&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Mozambique&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Namibia&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Nepal&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Netherlands&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;New Zealand&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Nicaragua&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Niger&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Nigeria&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;North Macedonia&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Norway&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Oman&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Pakistan&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Panama&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Papua New Guinea&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Paraguay&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Peru&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Philippines&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Poland&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Portugal&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Qatar&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Romania&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Russia&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Rwanda&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;SÃ£o TomÃ© and PrÃ­ncipe&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Saint Lucia&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Saint Vincent and the Grenadines&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Samoa&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Saudi Arabia&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Senegal&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Serbia&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Seychelles&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Sierra Leone&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Singapore&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Slovakia&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Slovenia&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Solomon Islands&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Somalia&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;South Africa&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Spain&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Sri Lanka&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Sudan&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Suriname&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Sweden&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Switzerland&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Syria&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Taiwan &quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Tajikistan&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Tanzania&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Thailand&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Timor-Leste&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Togo&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Tonga&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Trinidad and Tobago&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Tunisia&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Turkey&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Turkmenistan&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Uganda&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Ukraine&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;United Arab Emirates&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;United Kingdom&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;United States&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Uruguay&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Uzbekistan&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Vanuatu&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Venezuela&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Vietnam&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Yemen&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Zambia&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Zimbabwe&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0me96kp1oxqt5f1fq1sfs1ern03u].[none:Country Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0me96kp1oxqt5f1fq1sfs1ern03u].[sum:Unemployment (%):qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0me96kp1oxqt5f1fq1sfs1ern03u].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0me96kp1oxqt5f1fq1sfs1ern03u].[sum:Unemployment (%):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0me96kp1oxqt5f1fq1sfs1ern03u].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0me96kp1oxqt5f1fq1sfs1ern03u].[sum:Inflation (%):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0me96kp1oxqt5f1fq1sfs1ern03u].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0me96kp1oxqt5f1fq1sfs1ern03u].[sum:Inflation (%):qk] + [federated.0me96kp1oxqt5f1fq1sfs1ern03u].[sum:Unemployment (%):qk])</rows>
        <cols>[federated.0me96kp1oxqt5f1fq1sfs1ern03u].[none:Country Name:nk]</cols>
      </table>
      <simple-id uuid='{45BDA7A8-D542-406B-A902-CC6BE50C806C}' />
    </worksheet>
    <worksheet name='Inflation Rate In Different Countries'>
      <table>
        <view>
          <datasources>
            <datasource caption='index_of_economic_freedom (data_new)' name='federated.0me96kp1oxqt5f1fq1sfs1ern03u' />
          </datasources>
          <datasource-dependencies datasource='federated.0me96kp1oxqt5f1fq1sfs1ern03u'>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Inflation (%)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[World Rank]' role='measure' type='quantitative' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Inflation (%)]' derivation='Sum' name='[sum:Inflation (%):qk]' pivot='key' type='quantitative' />
            <column-instance column='[World Rank]' derivation='Sum' name='[sum:World Rank:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0me96kp1oxqt5f1fq1sfs1ern03u].[none:Country Name:nk]'>
            <groupfilter expression='SUM([Inflation (%)]) &gt;= 10.' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
              <groupfilter function='level-members' level='[none:Country Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0me96kp1oxqt5f1fq1sfs1ern03u].[none:Country Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <text column='[federated.0me96kp1oxqt5f1fq1sfs1ern03u].[sum:World Rank:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0me96kp1oxqt5f1fq1sfs1ern03u].[sum:Inflation (%):qk]</rows>
        <cols>[federated.0me96kp1oxqt5f1fq1sfs1ern03u].[none:Country Name:nk]</cols>
      </table>
      <simple-id uuid='{1B72905D-F6AC-46A5-A00C-BEB9CB8FA6EC}' />
    </worksheet>
    <worksheet name='Top 40 Countries By GDP Growth Rate'>
      <table>
        <view>
          <datasources>
            <datasource caption='index_of_economic_freedom (data_new)' name='federated.0me96kp1oxqt5f1fq1sfs1ern03u' />
          </datasources>
          <datasource-dependencies datasource='federated.0me96kp1oxqt5f1fq1sfs1ern03u'>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[GDP Growth Rate (%)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[World Rank]' role='measure' type='quantitative' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[GDP Growth Rate (%)]' derivation='None' name='[none:GDP Growth Rate (%):qk]' pivot='key' type='quantitative' />
            <column-instance column='[GDP Growth Rate (%)]' derivation='Sum' name='[sum:GDP Growth Rate (%):qk]' pivot='key' type='quantitative' />
            <column-instance column='[World Rank]' derivation='Sum' name='[sum:World Rank:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0me96kp1oxqt5f1fq1sfs1ern03u].[none:GDP Growth Rate (%):qk]' included-values='in-range'>
            <min>-59.700000000000003</min>
            <max>43.399999999999999</max>
          </filter>
          <slices>
            <column>[federated.0me96kp1oxqt5f1fq1sfs1ern03u].[none:GDP Growth Rate (%):qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0me96kp1oxqt5f1fq1sfs1ern03u].[sum:World Rank:qk]' palette='red_green_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0me96kp1oxqt5f1fq1sfs1ern03u].[sum:World Rank:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value='Arrows/2-5.png' />
                <format attr='size' value='1.7251380681991577' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0me96kp1oxqt5f1fq1sfs1ern03u].[sum:GDP Growth Rate (%):qk]</rows>
        <cols>[federated.0me96kp1oxqt5f1fq1sfs1ern03u].[none:Country Name:nk]</cols>
      </table>
      <simple-id uuid='{71387F9B-72E8-4703-ACB0-CF1F1BA15DED}' />
    </worksheet>
    <worksheet name='Top 40 Ranking Countries in the Index'>
      <table>
        <view>
          <datasources>
            <datasource caption='index_of_economic_freedom (data_new)' name='federated.0me96kp1oxqt5f1fq1sfs1ern03u' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0me96kp1oxqt5f1fq1sfs1ern03u'>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[World Rank]' role='measure' type='quantitative' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[World Rank]' derivation='None' name='[none:World Rank:qk]' pivot='key' type='quantitative' />
            <column-instance column='[World Rank]' derivation='Sum' name='[sum:World Rank:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0me96kp1oxqt5f1fq1sfs1ern03u].[none:World Rank:qk]' included-values='in-range'>
            <min>1</min>
            <max>40</max>
          </filter>
          <slices>
            <column>[federated.0me96kp1oxqt5f1fq1sfs1ern03u].[none:World Rank:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0me96kp1oxqt5f1fq1sfs1ern03u].[Longitude (generated)]' field-type='quantitative' max='59557797.422745764' min='-4233486.4468738567' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0me96kp1oxqt5f1fq1sfs1ern03u].[Latitude (generated)]' field-type='quantitative' max='23751328.746254057' min='-32995517.724815026' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0me96kp1oxqt5f1fq1sfs1ern03u].[sum:World Rank:qk]' palette='red_green_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0me96kp1oxqt5f1fq1sfs1ern03u].[none:Country Name:nk]' />
              <color column='[federated.0me96kp1oxqt5f1fq1sfs1ern03u].[sum:World Rank:qk]' />
              <geometry column='[federated.0me96kp1oxqt5f1fq1sfs1ern03u].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0me96kp1oxqt5f1fq1sfs1ern03u].[Latitude (generated)]</rows>
        <cols>[federated.0me96kp1oxqt5f1fq1sfs1ern03u].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{9F97C7FC-D41C-4C8B-96C5-E888EFFEBFC7}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' preset-index='1' sizing-mode='fixed' />
      <datasources>
        <datasource caption='index_of_economic_freedom (data_new)' name='federated.0me96kp1oxqt5f1fq1sfs1ern03u' />
      </datasources>
      <datasource-dependencies datasource='federated.0me96kp1oxqt5f1fq1sfs1ern03u'>
        <column datatype='integer' name='[World Rank]' role='measure' type='quantitative' />
        <column-instance column='[World Rank]' derivation='None' name='[none:World Rank:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='49000' id='7' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='49000' id='5' type-v2='layout-basic' w='95200' x='800' y='1000'>
              <zone h='24500' id='3' name='Top 40 Ranking Countries in the Index' w='55000' x='41000' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='27063' id='15' name='2022 Economic Freedom Score' w='40200' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='21937' id='17' name='Bottom Ranking Countries in the Index' w='40200' x='800' y='28063'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='24500' id='19' name='Index Score based on Unemployment Rate' w='55000' x='41000' y='25500'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='32' h='49000' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='3200' x='96000' y='1000'>
              <zone h='9125' id='8' name='Top 40 Ranking Countries in the Index' pane-specification-id='0' param='[federated.0me96kp1oxqt5f1fq1sfs1ern03u].[sum:World Rank:qk]' type-v2='color' w='3200' x='96000' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='9125' id='16' name='2022 Economic Freedom Score' pane-specification-id='0' param='[federated.0me96kp1oxqt5f1fq1sfs1ern03u].[sum:2022 Score:qk]' type-v2='color' w='3200' x='96000' y='10125'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='9125' id='18' name='Bottom Ranking Countries in the Index' param='[federated.0me96kp1oxqt5f1fq1sfs1ern03u].[none:World Rank:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='3200' x='96000' y='19250'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='9000' id='20' name='Index Score based on Unemployment Rate' pane-specification-id='2' param='[federated.0me96kp1oxqt5f1fq1sfs1ern03u].[:Measure Names]' type-v2='color' w='3200' x='96000' y='28375'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='12625' id='22' name='Index Score Based on Financial Problem' pane-specification-id='0' param='[federated.0me96kp1oxqt5f1fq1sfs1ern03u].[none:Region:nk]' type-v2='color' w='3200' x='96000' y='37375'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone h='49000' id='21' name='Index Score Based on Financial Problem' w='49200' x='800' y='50000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='49000' id='23' name='Index Score Based on Population' w='49200' x='50000' y='50000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1700' minheight='1700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='27' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='26' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone fixed-size='209' h='27063' id='15' is-fixed='true' name='2022 Economic Freedom Score' w='40200' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9125' id='16' name='2022 Economic Freedom Score' pane-specification-id='0' param='[federated.0me96kp1oxqt5f1fq1sfs1ern03u].[sum:2022 Score:qk]' type-v2='color' w='3200' x='96000' y='10125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='188' h='24500' id='3' is-fixed='true' name='Top 40 Ranking Countries in the Index' w='55000' x='41000' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9125' id='8' name='Top 40 Ranking Countries in the Index' pane-specification-id='0' param='[federated.0me96kp1oxqt5f1fq1sfs1ern03u].[sum:World Rank:qk]' type-v2='color' w='3200' x='96000' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='188' h='24500' id='19' is-fixed='true' name='Index Score based on Unemployment Rate' w='55000' x='41000' y='25500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9000' id='20' name='Index Score based on Unemployment Rate' pane-specification-id='2' param='[federated.0me96kp1oxqt5f1fq1sfs1ern03u].[:Measure Names]' type-v2='color' w='3200' x='96000' y='28375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9125' id='18' name='Bottom Ranking Countries in the Index' param='[federated.0me96kp1oxqt5f1fq1sfs1ern03u].[none:World Rank:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='3200' x='96000' y='19250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='167' h='21937' id='17' is-fixed='true' name='Bottom Ranking Countries in the Index' w='40200' x='800' y='28063'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='21' is-fixed='true' name='Index Score Based on Financial Problem' w='49200' x='800' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='12625' id='22' name='Index Score Based on Financial Problem' pane-specification-id='0' param='[federated.0me96kp1oxqt5f1fq1sfs1ern03u].[none:Region:nk]' type-v2='color' w='3200' x='96000' y='37375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='23' is-fixed='true' name='Index Score Based on Population' w='49200' x='50000' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{C4D5DDD8-CF7C-4741-9AFB-B9DDB19656E2}' />
    </dashboard>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 2'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='7' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='5' type-v2='layout-basic' w='82400' x='800' y='1000'>
              <zone h='37625' id='3' name='Index Score Based on Population' w='41200' x='42000' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='37625' id='9' name='Index Score Based on 5 Year On  GDP Growth Rate(%)' w='41200' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='30188' id='10' name='Inflation Rate In Different Countries' w='41200' x='800' y='38625'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='35875' id='11' name='Corelation Between InflationAnd Unemployment' w='41200' x='42000' y='38625'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='24500' id='13' name='Corelation Between GDP(PPP) And Monetary Freedom' w='41200' x='42000' y='74500'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='30187' id='14' name='Top 40 Countries By GDP Growth Rate' w='41200' x='800' y='68813'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98000' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='16000' x='83200' y='1000'>
              <zone h='9125' id='8' name='Index Score Based on Population' pane-specification-id='2' param='[federated.0me96kp1oxqt5f1fq1sfs1ern03u].[sum:2022 Score:qk]' type-v2='color' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='9000' id='12' name='Corelation Between InflationAnd Unemployment' pane-specification-id='1' param='[federated.0me96kp1oxqt5f1fq1sfs1ern03u].[:Measure Names]' type-v2='color' w='16000' x='83200' y='10125'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='9125' id='15' name='Top 40 Countries By GDP Growth Rate' pane-specification-id='0' param='[federated.0me96kp1oxqt5f1fq1sfs1ern03u].[sum:World Rank:qk]' type-v2='color' w='16000' x='83200' y='19125'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1750' minheight='1750' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='19' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='18' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone fixed-size='280' h='37625' id='9' is-fixed='true' name='Index Score Based on 5 Year On  GDP Growth Rate(%)' w='41200' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='37625' id='3' is-fixed='true' name='Index Score Based on Population' w='41200' x='42000' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9125' id='8' name='Index Score Based on Population' pane-specification-id='2' param='[federated.0me96kp1oxqt5f1fq1sfs1ern03u].[sum:2022 Score:qk]' type-v2='color' w='16000' x='83200' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='234' h='30188' id='10' is-fixed='true' name='Inflation Rate In Different Countries' w='41200' x='800' y='38625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='279' h='35875' id='11' is-fixed='true' name='Corelation Between InflationAnd Unemployment' w='41200' x='42000' y='38625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9000' id='12' name='Corelation Between InflationAnd Unemployment' pane-specification-id='1' param='[federated.0me96kp1oxqt5f1fq1sfs1ern03u].[:Measure Names]' type-v2='color' w='16000' x='83200' y='10125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='233' h='30187' id='14' is-fixed='true' name='Top 40 Countries By GDP Growth Rate' w='41200' x='800' y='68813'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9125' id='15' name='Top 40 Countries By GDP Growth Rate' pane-specification-id='0' param='[federated.0me96kp1oxqt5f1fq1sfs1ern03u].[sum:World Rank:qk]' type-v2='color' w='16000' x='83200' y='19125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='188' h='24500' id='13' is-fixed='true' name='Corelation Between GDP(PPP) And Monetary Freedom' w='41200' x='42000' y='74500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{34774CB7-4A5B-4E7B-BD7E-09AB1975B3A0}' />
    </dashboard>
    <dashboard name='Story 1' type='storyboard'>
      <style />
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98340' id='1' param='vert' removable='false' type-v2='layout-flow' w='98426' x='787' y='830'>
            <zone h='4357' id='3' type-v2='title' w='98426' x='787' y='830' />
            <zone h='10477' id='4' is-fixed='true' paired-zone-id='5' removable='false' type-v2='flipboard-nav' w='98426' x='787' y='5187' />
            <zone h='83506' id='5' paired-zone-id='4' removable='false' type-v2='flipboard' w='98426' x='787' y='15664'>
              <flipboard active-id='1' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='This map Shows the 2022 economic Freedom source' captured-sheet='2022 Economic Freedom Score' id='1' />
                  <story-point caption='This map Shows the Top 40 Ranking Countries in the index' captured-sheet='Top 40 Ranking Countries in the Index' id='2' />
                  <story-point caption='This map Shows the Bottom Ranking Countries in the index' captured-sheet='Bottom Ranking Countries in the Index' id='3' />
                  <story-point caption='This map Shows the  Index Score based on Unemployment Rate ' captured-sheet='Index Score based on Unemployment Rate' id='4' />
                  <story-point caption='This map shows the Index Score based on Financial Problem' captured-sheet='Index Score Based on Financial Problem' id='5' />
                  <story-point caption='This map Shows the index score based on Population' captured-sheet='Index Score Based on Population' id='6' />
                  <story-point caption='This map Shows the index score based on 5 Year on GDP Growth Rate(%)' captured-sheet='Index Score Based on 5 Year On  GDP Growth Rate(%)' id='7' />
                  <story-point caption='This map Shows the Inflation rate in different Countries' captured-sheet='Inflation Rate In Different Countries' id='8' />
                  <story-point caption='This map Shows the Corelation between inflation and argument' captured-sheet='Corelation Between InflationAnd Unemployment' id='9' />
                  <story-point caption='This map Shows the Corelation between GDP(PPP) and Monetary Freedom' captured-sheet='Corelation Between GDP(PPP) And Monetary Freedom' id='10' />
                  <story-point caption='This Map Shows the Top 40 countries by GDP Growth Rate' captured-sheet='Top 40 Countries By GDP Growth Rate' id='11' />
                  <story-point caption='DashBoard 1' captured-sheet='Dashboard 1' id='12' />
                  <story-point caption='Dashboard 2' captured-sheet='Dashboard 2' id='13' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{D4B7E25B-CB9F-471F-9B06-F0A0DF7C1066}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' maximized='true' name='2022 Economic Freedom Score'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0me96kp1oxqt5f1fq1sfs1ern03u].[sum:2022 Score:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0me96kp1oxqt5f1fq1sfs1ern03u].[none:Country Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F06BCBCD-11E2-483E-A17C-65BC452C3E03}' />
    </window>
    <window class='worksheet' name='Top 40 Ranking Countries in the Index'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0me96kp1oxqt5f1fq1sfs1ern03u].[sum:World Rank:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0me96kp1oxqt5f1fq1sfs1ern03u].[none:Country Name:nk]</field>
            <field>[federated.0me96kp1oxqt5f1fq1sfs1ern03u].[none:World Rank:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3B223681-0052-48EB-B0D1-35737FF07286}' />
    </window>
    <window class='worksheet' name='Bottom Ranking Countries in the Index'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0me96kp1oxqt5f1fq1sfs1ern03u].[none:World Rank:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.0me96kp1oxqt5f1fq1sfs1ern03u].[sum:World Rank:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0me96kp1oxqt5f1fq1sfs1ern03u].[none:Country Name:nk]</field>
            <field>[federated.0me96kp1oxqt5f1fq1sfs1ern03u].[none:World Rank:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5A46C042-8E3B-413D-9B61-358C2A1993B2}' />
    </window>
    <window class='worksheet' name='Index Score based on Unemployment Rate'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0me96kp1oxqt5f1fq1sfs1ern03u].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0me96kp1oxqt5f1fq1sfs1ern03u].[none:Country Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5D347F21-7FA6-466F-B6DB-2CD9D9638854}' />
    </window>
    <window class='worksheet' name='Index Score Based on Financial Problem'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0me96kp1oxqt5f1fq1sfs1ern03u].[none:Region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0me96kp1oxqt5f1fq1sfs1ern03u].[none:Country Name:nk]</field>
            <field>[federated.0me96kp1oxqt5f1fq1sfs1ern03u].[none:Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A5333DB1-8559-4A70-AACA-1BF887182856}' />
    </window>
    <window class='worksheet' name='Index Score Based on Population'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0me96kp1oxqt5f1fq1sfs1ern03u].[sum:2022 Score:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0me96kp1oxqt5f1fq1sfs1ern03u].[:Measure Names]</field>
            <field>[federated.0me96kp1oxqt5f1fq1sfs1ern03u].[none:Country Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{48DB71E6-52E4-4C76-941E-0B2A61CEDF49}' />
    </window>
    <window class='worksheet' name='Index Score Based on 5 Year On  GDP Growth Rate(%)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0me96kp1oxqt5f1fq1sfs1ern03u].[sum:2022 Score:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0me96kp1oxqt5f1fq1sfs1ern03u].[none:Country Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F0864104-BD08-49F8-A150-C55416A8BD99}' />
    </window>
    <window class='worksheet' name='Inflation Rate In Different Countries'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='38'>
            <card type='columns' />
          </strip>
          <strip size='38'>
            <card type='rows' />
          </strip>
          <strip size='38'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0me96kp1oxqt5f1fq1sfs1ern03u].[none:Country Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{55850806-40EA-45D8-AA49-F325F254F40A}' />
    </window>
    <window class='worksheet' name='Corelation Between InflationAnd Unemployment'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='200'>
            <card pane-specification-id='1' param='[federated.0me96kp1oxqt5f1fq1sfs1ern03u].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0me96kp1oxqt5f1fq1sfs1ern03u].[none:Country Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{216538D0-A092-4670-9336-8D23FF02AB0F}' />
    </window>
    <window class='worksheet' name='Corelation Between GDP(PPP) And Monetary Freedom'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='200'>
            <card pane-specification-id='1' param='[federated.0me96kp1oxqt5f1fq1sfs1ern03u].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0me96kp1oxqt5f1fq1sfs1ern03u].[none:Country Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F6669E17-3D42-4AA4-B0AC-BF124257479A}' />
    </window>
    <window class='worksheet' name='Top 40 Countries By GDP Growth Rate'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0me96kp1oxqt5f1fq1sfs1ern03u].[sum:World Rank:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0me96kp1oxqt5f1fq1sfs1ern03u].[none:Country Name:nk]</field>
            <field>[federated.0me96kp1oxqt5f1fq1sfs1ern03u].[none:GDP Growth Rate (%):qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{75B55D2C-3DA0-46CF-ADEC-1ED677D2F02F}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='2022 Economic Freedom Score'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Bottom Ranking Countries in the Index'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Index Score Based on Financial Problem'>
          <highlight>
            <color-one-way>
              <field>[federated.0me96kp1oxqt5f1fq1sfs1ern03u].[none:Region:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Index Score Based on Population' />
        <viewpoint name='Index Score based on Unemployment Rate'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Top 40 Ranking Countries in the Index'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{6638BA45-618B-47FE-AC98-828A79773EEE}' />
    </window>
    <window class='dashboard' name='Dashboard 2'>
      <viewpoints>
        <viewpoint name='Corelation Between GDP(PPP) And Monetary Freedom'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Corelation Between InflationAnd Unemployment'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Index Score Based on 5 Year On  GDP Growth Rate(%)'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Index Score Based on Population'>
          <selection-collection>
            <node-selection select-tuples='false'>
              <oriented-node-reference orientation='vertical'>
                <node-reference>
                  <fields>
                    <field>[federated.0me96kp1oxqt5f1fq1sfs1ern03u].[none:Country Name:nk]</field>
                  </fields>
                  <multibucket>
                    <bucket>&quot;Iraq&quot;</bucket>
                  </multibucket>
                </node-reference>
                <page-reference />
              </oriented-node-reference>
            </node-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='Inflation Rate In Different Countries'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Top 40 Countries By GDP Growth Rate'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{185FAE3C-E209-4568-A2FC-9F802E49F8D8}' />
    </window>
    <window class='dashboard' name='Story 1'>
      <viewpoints />
      <active id='4' />
      <simple-id uuid='{4EFD1384-9EF1-4617-BBA2-E0A28F6A4ACE}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='2022 Economic Freedom Score' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Bottom Ranking Countries in the Index' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Corelation Between GDP(PPP) And Monetary Freedom' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Corelation Between InflationAnd Unemployment' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      2gAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Dashboard 2' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Index Score Based on 5 Year On  GDP Growth Rate(%)' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAb20lEQVR4nO3dWWwc+Z3Y8W9VdVcf1Qe7m2w2T1GiqFuawx7b4/GuD9hrb7zOYu3EWGyC
      BAmwD3lKXhJggQB5XCDIc96MLBIg2A0QJGsnWXu9thf2zHguaXSRlMT7Jpts9n1X1T8PmqHm
      6K5qasimqP5/AD1U68+qH4v1+19V/y5FCCGQpB6lnnQAknSSZAJIPU0mgPRMs80Gd26+w85+
      0bFctVqlVW/eMussr6zTqBTIlWqf+n/PkUUqScfg9b/9P0QmX0RXBa//6m/RIkPEDA8j/WH2
      q4IH92cJ9MWZeedXvPz17xGyC+xkipy59CLJYB1NsfkvP/oL/skPv8GOmULNLuLpGyZEkeX1
      tGwBpGdbpmJxdeosvsYWRW2IzNIjbk9PU9hbY3llFYLD7GysMDJ+luuXzvLe+7O8+uVXePf1
      X3D39iMAvvKVL/DG6++AVafSsLl/9w6rGxnGUkHZAkjPtt/94gv8+K9/zJVr1zD3p1EjCcY8
      NW7OrHDm4g1sQhhaiohucXd2gcvXruHzh4kqRfoufAfV22Bw9Dx6I0PYD5uFCsnkIMlEhGhM
      RznqaVAhBIqiHOUuJelQ7GaVN967x1de/QJuV+KRJ4BlWWiadpS7lKRjI8cAUk+TCSD1NJkA
      Uk+TCSD1NJkAUk+TCSD1NJkAUk+TCSD1NJkAUk+TCSD1NJkAUk97qgRo1krMPlpACJuluYcs
      rW0ddVyS1BVP9Th0w3q80qZRzaP4Y9iVHE2RQhMC27aPOkZJOjZPlQCGEUJVAARCAELw4SOl
      iqLIx6GlU+OpEiC7u0W9VqdQU6GZRzXC6IoCioIQAlWVQwvpdJDrAaSeJqtqqafJBJB6mkwA
      qafJBJB6mkwAqafJBJB6mkwAqafJBJB6mkwAqafJBJB6mkwAqafJBJB6mkwAqad9tgQQFguP
      HrG+lT6icCSpuz7TCzJss0GuVGQkNoD4YDWYZVkt39UkSc+iz7QeQNgWpimYm51h6sZ1PMj1
      AIclGhWK//s/feyz8B/8G5Rg5IQi6i2fKQFsq8nK0jKKL8SZsSEUns0EEEKAbX38Q1WTSzel
      3lgRZuZ2KP7sRx/7rO+HfyYTQOqNBJCkdk7kLZF2s0Flcfpjnxnnr6No8qWVvaL4xl9TW7x7
      sB249AVCr3y763EcewtQ/Pu/pLExd7AduPFV/BdeIffOLz72c31f+j1Ur36UoUiSK9kFkp4Z
      drPB/I/+48c+m/jjf4Xelzi2Y/Z0Apj5DHaldLCtBkN4osd3sp8F9dw+c//9P3/ssyt/+u8O
      1frWF96n/NZPDra1+BDR3/9T6rtb2M3GwefevgSeYOizB31MrEqxtxOgPP0W9dUn3TPf+BTG
      1S+dYESn296v/x/NfOZgO/rCqwTHz59gRM6qa3NHnwCl7XWscgnF4yFypvu/fG1rBbtWPdjW
      E4N4IrFjO159YxHx0VqvfwgtFD2243Vb+r/+OcI2D7bj3/2XeAdGTjCio9Vy2mV/e5W3bt6l
      Vq/j8wW4cP1znB8fdH3tPEBlZ5Pq1iqaz38iCVDfWKSZe1ILKR7PkSTA/r132X79ZwfbwdQY
      E3/0z6mvz2GViwefq/7gqUyA9d/8nPTtdw6245euM/Gtf0jyn/3ZCUb1WHX6t5Rv/d3Btnfo
      LNFv/tMj2XfLFmB7c5OBVIo777yBGk6R7DMYGhnuKAFOUxeo2wq//p/UV2YOtoPXXsN46Rst
      y1Z3t6ntPvnaeW8oQmh88thjfF5t/cWfIz7yNED/9/4F+sBI6wSo5NLMLq8xPz2PJxLlB9/7
      TscHkglwNIrLcxSXHx1s+xNJ4tdfOcGInk8tu0Bef4DM+ipGIsGly1e6Fkxz9peYc28ebGvD
      V9A///2uHf9ZEp6YIjwxddJhPPfajAHWqGsGRihKIuLvXjAXv4rnwu88+UCR63Wk49XyCsuV
      6rz44kv87qsvo2uC996/Tzee8FdUDUXzPvmnyq6UdLxajgFss867b73JXr6CLxjltddeJaB/
      +mIUtsnD2Vnwhbl0fgKQYwDpdGl7H0AIgWmaaJrW9o0v9co+O/sCUdknNXUej23TbDaxLOvg
      VUkffWfYh58JIQ5WjbX6DDg45kd/vtPPTsOxP/z54zy2p7mMRuXg/23PEE0ldqzH7vT8duPY
      qqpiWZbjvto+fjl767fcmt1m9GySr732lZZlVEWj0SwjTBNNUQ5qfr//+McNjfw+1Y3lg23N
      5yc02b0B+2lg1+IIO3Cw7fGG0L3GCUZ0tIrz09iN+sF2cPQciqpSW59HADbgicbxD0203Ufb
      BBDColrKsLUbbP/D/gghPQ+hwa4/V23Xq9T3tp/E8gw/c3JSVP/QSYdwrOr7aayP3PX3JYfR
      NI3m3pP7J4qqgcNpaNkFEsLm7Xff48Xr1/nt22/z9a99reOgjmMMULj3FsJ6chPDOH8Nzym8
      23pcmuuzVN/8HwfbqtFH6Lv/+gQjesLKrFP55UdW46ka4R/8+5ML6BNaVtxWo8LKwhz1apXE
      4Fi3Y/oU0WwgrCfPo9DD7yKuvPFXiMaTfr3vxrfwjl7G+8P/cIJRtaclRgn/42czNnAYBC9O
      3+LXt+4TTQzzR//gmx3vUM4CHS8zs/6xBf5aNImiBxx+QnLStuu+uZfn7PgIG+lCN+N5LjS2
      l8n99L8dbCu6n4E/+bdHsm9PYvRI9iM91noMYNvMzd4nNjTGysoqn3/phY53eNpbACEEzbW/
      +thnntR3UPW+E4pIOk4tW4C9pbvcX82x/tO/4Yvf+kG3YzpRiqKgj//xSYchdUnLO1xCKGyu
      LVK3VdI7W62KSNJzoaeXREpS20Hw/L13ufVgmWhyjG9/Va6TlZ5PLROgnM/w/t0HXHjpFSKh
      cLdjkqSuaT0GsG2MRD+a1WRhYaHbMUlS17RsAXwBPysL83g1DxVTLkqRnl9tB8ELs7fJVDWu
      Xb1E0OfteIdyECydJm2r94HBFOnlGf7yf/1NN+ORpK5qmwDF3D6+SILBhMMdUGEyc39aviNM
      OrXaToMqCOYezfHqN1p/JUq9VsWyTEyrSaPZlO8Ik06ltgmwurrOjZdf5sH9u7x06eyn/l8I
      G6GonJ+6zPL8I8zxEbwf9P3lGEA6Ldp2geLxKNn9LEGj9X0Af8Ag6PeTzWyRGB6j82GyJD07
      2s4CbS9OkxExJkf78fs6/+psOQsknSZtWwBb0Zi++TpvvHe3XRFJOvVaJsDGg/fYbobJptdY
      nJ/vdkyS1DUtE8AfDPJwepqvf/Pb6F754jrp+dXmWyEEO+tLLG9lufHCCwR9nSeBHANIp0n7
      MQAqV69fP9TFL0mnTcsEyCzf4ze3HvLjn/zfbscjSV3VMgEs0yK9vc768iN+8vPfdDsmSeqa
      lv2b5LmrXJ5fI1+OMHH203eBJel50bIFSC/exzd8ne9///vM33232zFJUte0bAH0QIiHr/+a
      lXsamvF8vzha6m2t7wOEY/z+d/+QVNxgZCjV7ZgkqWtaJsDO8iN2inWSo+fIbC13NyJJ6qKW
      CTB68Trzb/+cBw8e0Jc69+kCQlCtPv5e9mIuQ7FS/3QZSToF2j4NWqtU0IPBlhmSz+xwb36V
      L714hUeLmwirweVrV1GRd4Kl06X9F2O9/zqb9HN9apyhZP/jD22Tja00qaFh4pEMplklHOmH
      8h4NIfDKFWHSKdM2AYYmL7H3YIH1rfSTBFA0hoeHyO1tsbOzQ6J/gGxmFVSdUUVBkSvCpFOm
      bRfo5uu/4L2HS4SjA/zJP/rDtjsQwgYev6UPZBdIOl3aPgynB6O8ePUiuLysWlHUg4tfkk6b
      tgkQMXSWVnOcnxjuZjyS1FVtE2BnZxuznOPh4lo345Gkrmo5BqiVcpQtDdGoEQxHCfrlonjp
      +dRyFkjTNG6//vfslUzGzk7y5c/d6HZcktQVLROgUS2yk63w+VdfYzgpH4aTnl8tu0CWaYKq
      oX4wuXOYWR7ZBZJOk5YtQG5jiUIgwc2f/xhfcpLvfet3uh2XJHVFywSolfb5zVtvE0pcRlS2
      ux2TJHVNm69Fscnt76F4Q5iNCv39/R3vUHaBpNNEviZV6mnyBWBST5MJIPW0p0oAIQTFYhGE
      IJPeZns3c9RxSVJXPFUCFPbT3Jl5iLDqpLNlErHoUcclSV1xuC/+tJusb6YZGh4hHsmA6iEc
      ULl7Z4YXXr6OIleESafM4RJA9TI6OkJ2d4vMXoZ0f5ZarYlX96IqCqpcESadMp95GvTDH5cr
      wqTT6DN/97lcDSadZnIaVOppMgGkniYTQOppMgGkniYTQOppMgGkniYTQOppMgGkniYTQOpp
      MgGkniYTQOppMgGknvZUCVCvFJlfWKTWMNnZWGUnkz/quCSpK54qAZqWYHQwzNyjBQp1ldzO
      BuZRRyZJXfBUK8Iiho+5rSznziTI5BWEWcUUQq4Ik06dp1oR9mjmLrrHT93SqRTWwBvAJ98R
      Jp1C8ouxpJ4mZ4GkniYTQOppMgGkniYTQOppMgGkniYTQOppMgGkniYTQOppMgGkniYTQOpp
      MgGknvZUCVAt5Zibm6dSb7C1vsbmzt5RxyVJXfF0LYDqZTQVYWV5g2y5zkCi74jDkqTuOFwC
      2E3W1zeoV0ssbhS4cH6cgWiQ27fuyAUx0qn0VOsB5h/cx6PqZAsF8vkSRjSKKgSCxy/MkAti
      pNPiyNYDCCGwbRvbtlFVObaWTocju1IVRUHTtI9d/LZttyzb6vPDlm2Vt8d5vE7LflgRdPN4
      3T4XnR7vWT4XH/4en/kVSZ/00dVgiqK0bA1afX6Ysh9uf/L1TK3KCiE+8/EURTn418nxOo3N
      6Xidlu328Q57LoQQn/l4x3EuDn6Po14S2Upxb4uZxQ10f4AXblx1bHaqhT0eLGziC/iZPD+J
      z+OwvNKucfO9aQKhAKMT54kEdYc9C+YfTpMv1IgPjXN2NOkY8/zDaZqWQjieZDTV71g2vbFC
      pljFslWuXL6A6vDatMz6Cp7BMSoba8QnzuBz2K9ZL3P73Tto0RCT5y8TCXidSnP//Ts0LYvk
      2SuMJEIOZQULj2bIFWrEksOcGx9y/P3mZ6dJjE5g+H3oXuc6M7O1xvx6mmDQ4OrVS23/1rbV
      IJstUCqXEIqX8bFhVIf3zVlmldtv30YNBZg4f4WY4fC3Fiaz07OYluDc5SsYevuYu9JZr9ca
      DCQTNCo1mi5lVVWl3qh3tmPVg9msdRiFwOMLo3sEjbrz/jM7G2xu79FpzWBZFgKwbcu1bDjW
      x8qDGTLVBk6X8+P9miQGEtRrTRpNtzMnCBp9KBo0KlXXODTdwO/F9VwA9A/EWV9eYmdv37Vs
      s2kTj4Vp1Bu07rx8EK1tUyyV6LT6FbZFLB6n2TRp1BtupTFNC1sI1/0feRfok8xGFS0YwVMq
      MjI24vpH14NRzo6PYCsamlNVCoCHqQvnqTctvF63hfgKumoTT50hNTjgWDIxOMILvhDRvii5
      XM5lvxCORKlaJYbPjTjW/lazRqlqEg2HQHNqrQBsKjULPRhgOGgQCTq1FYJ8rowR8uHxp0gM
      ON+XyefyRAw/qjpAJJZwiQPS6QzVahX2M4wNtW85G5UCejiKr1hgaDiG019E8/o5MzbC9s4u
      qG6XoU2p3MAXCpAKGfSFA87FFZWBwWH8XtAcq3hx/C2AsG1y+RyWbWNa7jVkpZBhc3GdfLVM
      sepW61VZXdygUi2wveN+ocYScbbXFrl79312c+1bjkalyM2b7zE9Pc3ufsF1v4FQBNWqcvvu
      tHOtJwSFUrHDlkUhHA7StATJZBKv81+ScMTAF4gwOjpK0Od8QYUjETxe7wcDQfdI+vqTjKYS
      +PxBx3Jef4hIyCCV7EfzuNetma1N0uk9stl9nOt0hUgkikdT2w6KP2kvvcny+g7gUCOJLnSB
      NK8Pu1wmlOinWcy7doG8eoCxi2exKg0CDn23x/ycvTCBsGxifU593scye/uMnDnHhYuXiATa
      1096MMz46AgXL19h6ty4635rlSJN4eXGtSuOJ9SjBxgfGaReq2LjdvIVPF4/A30B3nrjTXJV
      p0tEQVU1Zu/dYn5hkZJjWVAVWFvfor+/HyPg1LI8ViqWGB4/h1d1vvgUVWVzZZm55VUKmT3c
      qrtoIsH4xBhCqC49AwWzUWC/aNKfSOBxrAwElUqN0bFRhoZT6C5ljz0BVM3DmakJdtfWML1+
      3Bp+RRHML6wQT8TwuHWBRJOlhSUajSb1psvpFjbZXBGPpqKg4fM5n/KwoXPv7j3Wt92fc8rs
      ZkgkkywvzGE51KjCttlYWqV/7CyiWMBt9GI1a+zm6rz6lS8T8bueOYaHU/h8XppOQQAoCgFd
      Y3V1lVyh7LJfiIZ8zMzMoPkM17KxeBivL0RqeNCxC2Q1K/zql79ieuYRqsfjVE8D4NENzGqW
      1bV117/143GkhbBtLNvhXChqdwbBpVz+cY2nKK7Nv+YzuHRhEr/P19Fb6BvNJqoGD+/PUDcd
      Toyi4vUI0uk05ZrbIApsoRLw6zRdB58QDhtsbayj+YIuY4AqNQS7G2s0dZ9rZbC9tsR2epe5
      mWn2iy4DW7tGralSb5TZ33XvDnp1D1bTpN7B72crOn2hAPUOBsyBUB8+u8z7d6bZzbSPQ/MG
      +b3v/gHnRuLs7KQ76hYqtsCym5iOhRX8/gDl7Car23t4NedrqCsJYDVqqL4gISPokuk2i48e
      srG5yebWDqZbf0/xkIhFsC2Vay9dd27uhED3+lE8GvWq+yxJqVIlkUhQq5RcyzZMQTioU6/X
      Hf+QHp/B2TPjGH4flaL7WCAxOEJ/PEp8cIhYyO9cWPUTCsDufo2JiUHXmJuWhterUi25/36V
      4j65mo3u0gUCqJZLVC0Pr776RVTR/gkxq1nllz/7KYubWUZHhl1bAMusoWs+FE2jXKq4lLbp
      S55hcjRF06kFoAuzQEIIwgPDqNUaiuo2U6Ny/tKVQ+y9TqMmMBIGub088ZDz3H6j0WBrdwd9
      MupYrlmvEY8n2M/lGEw5z5EDeFXBbl0hGQu7ln08XWqjCYEJjt0EaJLbSNMc7UcvR+mPOMx+
      2A0yBZNzQ1E2d3KMD8Uc9xwyfGTrFfyG+9gpFo9T38vj8TkPggFss0m5XGJ+fpFLF8+3Lad6
      /Lz2tW8cbLslgKrqxEdHwCyj6S5zibbF9sYGuVKZ65/7nGPFeOwtgG3WWVldJZ1Os7uX7Xhu
      3Z2gVGgQS8WpFmuMjDpPbe5ubzI6eZHP3biOEXSbRlNQVSgV8mTzRddIPLqOJhqU6pbrH1JT
      VarVKtHBQcebYABePczUjSmsapOA05hF2CwvLVEpF8kWy64xAPQPpJicmqJWcp/lSu/l8agq
      9bJ72VK5RigUxKrXHQfBiqLg8/kO/rl1d7fXl5mZmWV7N4vH5WYcioqmCaoNE6/Lc2nH3gJo
      Xj9TFy4ez749GsGggWrX2NzKcHas/R3bvniCmTs3EeEBrl5wvrOb39vk9oMVzpwZJxJyr/X2
      93MMjY6xvbqKLcCp27m7sUnyzDnyy4uUUgMYmtb2gtW8OtFYP6piU6s0MNpNbyoK0XgSny9I
      3bSJ9bkPVrOZHXLFKgODKdeyqdQgtUqBiuU9eLSklXqlhK1q+L3g1YMurdth2ITiKSY9BkJR
      0b3OMzvTd25hagFGh4dc7yUdewIcH4VAMEQACIeDBCvOKxJKhTzBvgSoUCzViEfbXyR9AyN8
      KfK4RfF4nYeqjUqRxNAouUwaT8BwHAQDxAbizMw9REGgbKYxxtp1sWyW5uaoNi1M0+TMpFMl
      ohCLxSEWBxrs7zcg4PSogGBnO43PCGO79JEB0tub+A2D9MYypmlzbrx10uj+IEPDfizLAuUo
      OxcKAZ+Hms8gEY+gOU5tKly8ep3trR0yhaprj+MUJ8ATiuIhZDj/KrGBFLEB99oOHl/0um1R
      rtTAZdzi9QdZm3tAtlhj4vwl130XC0WEaOL1RBgaG3Lorqicneq05RTs7WxRrNSBGqZIEI+3
      79tvbayyXygT9+iPL1YXulcjny8SiQ/gdMNdUVXSKwssbGUIBw1uvHi9o+6YOwWPV2du9j0y
      ySEmzk063OwTbG+ss5cvEw734XHpWj0XCXAclhcXqTYsdH+Ayxen2pZr1srULYGwIZ/PkXDp
      fgSNEFZjnTJN18dCDiPSF8eIPK7vvLrz6GJo9Ay+QIR4vI/Mvvv73bxenWaxih7wMDbiXIkE
      QhHOjvvIFWpHON4DRdE4NzlJvdF0HS/4/AFiihcUDRuB6pCGMgHa6B9MUcpnaarO0496MMKV
      K9c62qewTTa2dkiOTFAvl47wAlHQfS7TpB9Rzme4c+ceycEkkfggbk8DlesmQZ+Xes15+riS
      3eb2zBzJ5ABGKHK0MyyKyuDQMOXsDtl8mcBApF1BBlIjHe60C3eCT6t8Zo/9ShPNPrrVzo1y
      EW8oTnZnjXhq5MROfsNWuXp5CsMwCBnOM2KlfBZVVVFVFSPsPH0cjA3yhZdvENQ95Dt4iPBQ
      hMX6yhI72SrxDgb5nZIJ0Iaueyhm9zCPsJH0+APUixm8/hCZdGd3P49DLBYnOTTKxMQ4WM4J
      rvsDFAtF+pMpKgXni7peynFvepa9/RyDQ+73Tw7DbFZYn1+jWCuSL3X6CLwbRXaB2qnVGrz8
      +S/id5tzPoSDKWFFeTydeGR7PpxCdo9soQzYlKqCWKx9za77/IwO9bO+sUEg5PyYtaYHmJiY
      AHB/juuQNM3PhRcusZ3ew+/6kGSnbJkA7fT1hVleWCA+MMhQMn5k+82uLbFUMYl7vIxMnXN9
      Hug4BIwwmv646zPkMmAGKBSKlEtlUJyH7R7dTyrV2Uzb4Vjcu3MXfziCzxdAd1370akuPQx3
      GlUqVTRNodTBszKH4fGHuHh+glK5fGIn36v7MAwDwzBclzgCqHqARJ+BfWJfd6NybvIsmqIg
      sHF/cOIwe5ZaajSaqKra0dOghxHoC7O5uIQe9NOoH+2+j0M5n6FWq2HhIR4/upbwsIrFIgKB
      zx/sYKVg52QCtFDY3yU+PMHY8CDhkPvDYochbAvTsvH6AmysrpzYQLhTQoAtBB6vTriDx0KO
      KQrKpTLNpkmlXMa0OlsV1gk5BmghFI2xPD9LumDz0oudzfF3ym6aBIwQZqNKMNx3YgPhThmR
      GIlanUwuT3ovS9hl2vR4qExdvnpMe5Y+pVLM08RLxNDJZI92PruYzRIZSGFZFtVi3nEN8bNg
      d32BB8sbWLboaLxw2nTle4GkJ6r5LKvpNKFIP30hP4ZxdDd1pMOTLUCXKdTZ2s5SLZcIyIv/
      xMkWoMsatQrFapNIyMDjdV8MLh0v2QJ0mcerUytmeOPN37KxvXvS4fQ8mQBdJIRNo1qmUDH5
      /Cuv4Peoz/w06PNOJkAXCctkcXmVvmiIpZU1Ev0J2QU6YTIBuszv93Hr5m38Pl3W/s8AOQju
      IiEEpvnh48eKHAQ/A2QCSD1NdoGkniYTQOppMgGkniYTQOppMgGkniYTQOppMgGkniYTQOpp
      MgGknvb/AXq2xGdzY5DWAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='180' name='Index Score Based on Financial Problem' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAAC0CAYAAADCbyPQAAAACXBIWXMAABJ0AAASdAHeZh94
      AAADLklEQVR4nO3dsVUdOxRAUfBySie/GMcO6IFK3MMPiCmGTlzAOHL0IBmPkJ7O3rnfXGAd
      RsMayY/HcRwPEPVt9gAwkwBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKR9P/sPf/7/
      48o5/tnr89tSM600z5WzXPFZK83jDkCaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0A
      pAmANAGQJgDSBECaAEg7vSXy9fntyjkusdpMq83DLXuCB1lpHiF+zhKINAGQJgDSBECaAEgT
      AGkCIE0ApAmANAGQJgDSBEDa6ZfhuC9XvhB3xWetMo8AIr7yzdSr34Qd9Wbt6/ObJRBtAiBN
      AKQJgDR7ggdabR5u2RM8yErzCPFzlkCkCYA0AZAmANIEQJoASBMAaQIgTQCkCYA0AZAmANIE
      QJoASLMpPsIr0R8TQMRXnwpxLyyBSNvqDrDab57V5uHWVnuCV9mC+PBgS+S92GpPMOu4+ucx
      6ue71RKIddzLUYwegkkTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQ5nXoCPsl
      PiaACJviP7bVlsjVZlptHm5ttSVypZlWmkeIn7MEYoh7iU4ADHEvzxz+DEqaAEgTAGmeAdjC
      2ecAAbAFB2PBCQIgTQCkCYA0AZAmANIEQJoASBMAaY/HcRyzh4BZ3AFIO/0u0O9f/105x2lP
      L+/TZ5k5w4xrf9U1R17n72e7A5AmANIEQJoASBMAaQIgTQCkCYA0AZAmANIEQJoASBMAaQIg
      TQCkCYA0AZAmANIEQJoASBMAaVv8DzFPL++zR5g6w4xrr/A9v8LpAFb6BjgWZd9jUUbb4lwg
      OMszAGkCIG2Lh2D2NXKJ+/TyLgDWNvpZ0xKINAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDS
      BECaAEgTAGkCIM1+gIvU9ibv8vU+HsdxzB5iBzNPhZjhq06FGH2dLU6FmD3L7N+GM45F2YUl
      EEsbHZsAWJo9wTCQAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECa
      TfGkuQOQ9gdijcnbB0ZtMwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Index Score Based on Population' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Index Score based on Unemployment Rate' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Inflation Rate In Different Countries' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Story 1' width='192'>
      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
      8SWdIAoYUpLcNfdW9hntfOPA9ym7Bh+961H2tR/kSP9JWqUGFBfsM46fUsjhr77z9/zBp36b
      hW1tk9Lh8XgmPQkWQkwrwrNtfhsHuo9SdK0qIwdsnZuWXXz5DyEE39/yA9LhMuq7TuLXLqq4
      MF89tb0qVoqlCt2KLpPIxTk6dJgyRX56TNWrCAHGMZebV93Kg488hCRJtCUX8ur+F2lsmMOc
      5jkAfOrBT2C8amJZFlElzNbkLlzt/DM+MRTi6PhQiOlAtqHVred37vtlZEnm2GA798y9lSMd
      R4kE65gbaeGO5Zv4xKMfI2R6OdpzAlcW+Msa2UAZbchhw00bzju+YRgTmFKSpGlVLAiFQmSS
      KYrFIulchg+0buS/Pf5Fmi4y28k0TX7w1A/Y2rMLDBfbe3YHiBDik5s+yle3fJMeZ6h6j2pK
      1LdWXKEjYhCPrZMNJVEC701//bWEJEkoDTDPu6Baw9Tv87Nm0Q34fX5OdrZTXxclEAiwaeXN
      bF6zCVUo7OzZg5hiF7ign3A66YweV+VDmx7kxjNhsZG6CJZrc8uqm7hh5VqOnTzOwgULKRaL
      PHDP/Zwe7eXNod3UiABLtCiLFi4879iapqHr+oRd4GLSG++/8z7uveMeisXiJZUuLBaLPPmd
      J3lzZDelGgelCO4Zba3BquEvfvG/861n/52jxY5x6mJSLpPtL1LT6kdWJbK1iWnH508HMxEu
      fj1BOAJhC2R9cmeGhMSRxEHudu8b5/CorallcGSQ9s521qxcQ29fH0+88iSdVh/iAkrCBAY4
      N5ZjTPeeiglkCx5f9gj3bDpb+GrtyjU8v/VF7lh/Gz9+9ScIWfDVV7/FnJpm6msjfOZDn+TB
      1H089faPaZDCtLZOHTQ2lml0Li42wUWW5SkX//neUQjBP3/9a+wvnqQUdhGCqqcH4LENj9BQ
      X48S8iDeVUTBayv4o1c2EWdaaY7XMVzTxS0LlJBMNN9CrDQCzePfxbUFYTPK5nl34kQmHop6
      vV7Wr60kDwkheHb7Fjrom7pB+xlMygAwsWHd2AS/e5GsiS7jQw89MoGoR+58CIDb1m+iZ6CH
      IZFkKJuENATf9PHgrffxB5/8AslUklgiPjWRZyJDz21xOtOYKh7p6Gg7Tuhss+1KyohAcmDJ
      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
    </thumbnail>
    <thumbnail height='192' name='Top 40 Countries By GDP Growth Rate' width='192'>
      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
      E/UAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Top 40 Ranking Countries in the Index' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
  </thumbnails>
  <external>
    <shapes>
      <shape name='Arrows/1-1.png'>
        iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAAACXBIWXMAABJ0AAASdAHeZh94
        AAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAgppVFh0WE1MOmNvbS5h
        ZG9iZS54bXAAAQBVVEYtOABYTUw6Y29tLmFkb2JlLnhtcAAokX1TS27bMBC9CsFsWqAWKUrU
        h4gayKKEZuE2cAykW1liYsEWKVBMrfhqWfRIvUIpw3KLwjW54QzfmzdDztzeDV1ZbYUBa/HS
        yAT+ev8JQVMn8Iku8KLLxKb5ctDi8fB1VR22VVzDu8/gdmBD27XClGBod7JnQwLLWq0Fs+fR
        jSA4Qsw2gel4Ab4vHkCmtADUCWYVDkIQxo5Lw9APPwGCXYqwhzw8Ix7zMfMJOC1o1XT9zJa8
        OGlZK4EbYzqG0H6/d/aeo/QLcuM4RpggQmYWMevfpCmHmexvpghc9JVuOtMoCUa7XKtXk0A4
        ldB2i8U5sOydY0FOpVo0lB1yHYzaFk3o3izF83V0v3rrBFqKXr3qSlj4zV9S16kj0GbDvunG
        fkq546p6bYU09zyB9sapm5r5acBdToPUbs5dN5rPg4y4BaV57lGcTjEucbnnRzHx4jzPC9fN
        6Tzy5nlM5yTnaZFiPnHvZW9KWYmJ2/zhRle5LNOiNEqvlNpNHfCwUUb1G9WB7DEAH54aWat9
        /3H8nlOmQjc/RF1o1YLj+7Lmgn4UZWkRc5/7YW71vYjyOMJB7vkkDUkQwhO3vlD3iUv/y0U2
        GfRPs0wu24Hj8dz61jgPj5B2YrQdjd8DmwcN3L1JPgAAAk1JREFUWIXdmDFrFEEUx39zSEqD
        p0FMZSepTgIW6e4biHJfwC6QL7FfQiIphHAINjZB0P5QEdSgGDVWQiqRq9LEgI7Fzp67ezOz
        782tyeKDV9zevf/73ZvZmTdjrLV02XrnDdBknQe8UP5gjNHEDoANYB1YA64DK+67H8A34DPw
        DngFvJcKV6adtXbmAjPACBgDU8AKfepiRk6jEXDGpAAcArsKqJDvOq1WAbeAwxbgCj90mgsD
        LgEZcNoiXOGnTntpEcDsH4DVPUsF3FJWbi6PopKV4ZYADtHPuVTAYk4OpYCGtLd1EUDrchoJ
        4ChBvA1A63JXmHxb3W3Ps7Oy+dy1Cg7Q7RBtV3AKDGIV3AD6aX++Fes7hpnVAdcbBCzwfQGA
        j8Dvht9UGOqAa5HAX8A94BbwVY0Gz4GbwA3ytS9kVYbaHDzCPzd+AndKYdeAA+RzcI9qMVaB
        40Cuo9gycxIIuusBWAH2BYCP8TfGq4FcJymAE+CiJ0kfeBMBHOPv/wxwPwUwNMQWeAEse5It
        Ay89z7cjcA8ieaJDPIkEWuB1AFJqBnjYkGMSA9xpCLbkQ3opEW4s0N+JAW4KBCzwFrishHsk
        1N6MAWq2un3gigCuR/4mSzTntjpfNyMZhsI/8PeoGYJ7otAbQ42phXbrALgagNtTas21W201
        rJ/Id5cy3FOlhrhhhbSW/4urZA94poxVtfyFaQ9NlnwJ0lYu6dBUWKZMluJZPel/dXAvrLNX
        H2Ub0uHLo8LO/PrNlMG6eIFphJU7N+v8HXXnAf8AX5hzyytRaIEAAAAASUVORK5CYII=
      </shape>
      <shape name='Arrows/1-2.png'>
        iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAAACXBIWXMAABJ0AAASdAHeZh94
        AAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAglpVFh0WE1MOmNvbS5h
        ZG9iZS54bXAAAQBVVEYtOABYTUw6Y29tLmFkb2JlLnhtcAAokX1TS27bMBC9CsFsWqAWqQ/1
        IaIGkiijWbgNHAPpVpaYmLBFChRTK75aFj1Sr1DKsNyicE1uOMP35s2QM7d3Q1fVW27Amr8I
        mcJf7z8hEE0Kn8gCL7qCb8SXg+aPh6+r+rCtkwbefQa3Ax3aruWmAkO7kz0dUlg1as2pPY9u
        BMERYrYpzMYL8H3xAAqlOSBOOKtxGIEocVwSRUH0CXjYJQj7yMczz6cBpoEHTgtaNd080yWb
        n7SslcKNMR1FaL/fO3vfUfoFuUmSIOwhz5tZxKx/k6YaZrK/mSIw3tdadEYoCUa7WqtXk0I4
        ldB2i8U5sOydY0FOrVo0VB1yHYzaFk3o3iz583V0v3rrOFryXr3qmlv4zV9S16kj0GZDv2lh
        P6XaMVW/tlyae5ZCe+M0oqFBFjKXkTCzmzHXjfM8LDx3TkhZ+gRnU4xLXIKLpGRZUZZz7Lol
        yWM/LxOSe9Y5zzCbuPeyN5Ws+cQVf7j5VS4tNK+M0iuldlMHPGyUUf1GdaB4DMGHJyEbte8/
        jt9zypRr8YM3c61acHxfKi7ox3FpBaOEBVFp9f2YsCTGYekHXhZ5YQRP3OZC3Sdu9l8ussmg
        f5plctkOHI/n1rfGeXi4tBOj7Wj8BkY2BzpyYDd0AAABz0lEQVRYhd3YsU7CQBzH8W8NYcHV
        xUVXJxI3Bw2jD9CHIOEl+hxshCdw0QdgYDEYJ8JGwmhgMpGw1KXF9qB3/397hcZfcgMp979P
        ri3cXRDHMU3OxbkBrjQe2Mp+CIJA07cLPAD3wB1wC1wl176AJTAHZsAU+JQWzj12cRzvmyAB
        EAJjYA3EwrZO+oRJDSdwb1IAe8BIgSpqo6SWV+AAWHjApW2R1KwMbAMRsPOIS9suqd2uAoxq
        gJktKgsc1DRzx2Yyd7slwB72Z+4D+PGIXJB5cVzAAPvbOgEugWfPyFEythMYCnBpJEgztu+G
        EuC4oPO7gZMiNcCxC9il+B/iG3g8MqALqQGuga4N2HcUKIPUAGOgbwMOBQW0SC1waANOBAW0
        SC1wYgOuhEANUgtc2YBbBVCK1AK3PoEu5I1voOYWS5FaYO4Wm3uSpXAQMx3gDXgq2b/QYALn
        FQp3gFfgukKNA0PLuDgTFFDtrEokZzBncApsagbYskkMf1EsFop+eLWx1T5YLBzbuL94QJTN
        4dglFqx1NfGCFdxLft9NteRP0+hNU5roBMDIHPRfbdzTNPboI5seDT48SnPy47cgC2viAWYg
        nLmzpfFn1I0H/gIJoWossTHk5AAAAABJRU5ErkJggg==
      </shape>
      <shape name='Arrows/1-3.png'>
        iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAAACXBIWXMAABJ0AAASdAHeZh94
        AAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAglpVFh0WE1MOmNvbS5h
        ZG9iZS54bXAAAQBVVEYtOABYTUw6Y29tLmFkb2JlLnhtcAAokX1TS27bMBC9CsFsWqAWSf1F
        RA1kk0KzcBo4BtKtLDGxYIsUKLpWfLUseqReIZRhuUXhmtxwhu/NmyFnbu/6tig3woCVeK1l
        Cn+//4KgrlL4HMzxvJ2Jdf3toMXT4WFZHjZlUsG7r+C2p33TNsIUoG+2sqN9CotKrQS158GN
        IDhCzCaF2XABfswfwUxpAQInnJQ4jECUOCSIIj/6AlxMAoQ95OGJ61EfU98FpwWtmq5e6ILl
        Jy1rpXBtTEsR2u/3zt5zlH5FJEkShF3kuhOLmHRv0hT9RHY3YwQmulLXramVBINdrNTOpBCO
        JTTtfH4OLDvnWJBTqgb1RYuIg1HToBHdmYV4uY7ulm+tQAvRqZ0uhYXf/CV1nToAbTb0u67t
        pxRbpspdI6S5Zym0N05VV9TPQkZYEGZ2M0ZIPJ2GM5fkQcC5F+BsjHGJy3GSJzjPOc8xITyY
        xt6UJ8HU5SzLM8xG7r3sTCFLMXLrP1x+lUtnWhRG6aVS27EDHtfKqG6tWjB7CsGn51pWat99
        Hr7nlKnQ9U9R5Vo14Pi+tL6gH8fcCsaE+RG3+l4csCTGIfd8N4vcMIInbnWh7hPX/S8X2WTQ
        P80yumwHDsdz61vjPDxC2onRdjQ+ADFhBxt6USiVAAAB00lEQVRYhdXYsU4CMRjA8X/R4Gyi
        u6sTiZsbD3Ev4EbCS9xriNGE4AMogz4Ag4sYnAibCaNhJyx14EoOyF37tYU7v6QDIW1/+Xq9
        +1qltabO0agaYIvaA0/zP5RSkr4t4Ba4Aa6BK+Ay++8X+AGmwBfwAXy7Drz12GmtN80hFJAA
        A2ABaMe2yPok2RhW4MYkALaBvgBV1PrZWFGBXWAWAWfaLBszGNgEUmAVEWfaKhu7GQJMBROO
        gUcPaOoL7AoyNwbOWW+Ae49Mbi23C7CN+zNncCZ8kDNyG8cGVMh26ztwtpN9H2Q/62cFJsKB
        NfAWCZm4AAcewFjIgQ3YQvaFiI1cAK0yYCcAFwvZKQP2IgANcjdckb0y4CgScPNAeyBHZcC5
        YLKQKEPOy4DLIwEBPgvmWuZNVVXU7vNWsMQN4KlgHusSH3qTnFhwe5tkN9XTgMzk47UA9wDc
        WfpuGw7won5hvwh1yZxppS/q0E9dKM76qQP/YiEUp3EoFsCv3IqB0ziWW9KCdRgJ51ywgqzk
        nwAXgThRyW9CcmiasL728MF5HZpMpIKJJsCzEKcJOHbCPzi4m6jt1Uc+2tT48sjE0a/fVB5W
        xwtM5Zi5yqL2d9S1B/4Bd6jWYJt5cMMAAAAASUVORK5CYII=
      </shape>
      <shape name='Arrows/1-4.png'>
        iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAAACXBIWXMAABJ0AAASdAHeZh94
        AAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAgppVFh0WE1MOmNvbS5h
        ZG9iZS54bXAAAQBVVEYtOABYTUw6Y29tLmFkb2JlLnhtcAAokX1T3W6bMBR+Fcu92aQFG4P5
        U1kFGLRepKvSSN0tAbdBCTYyzkLzar3YI+0VaqKQTVMW+8bn+PvOd459zu3d0JXVhmuw4q+N
        iOHv918QNHUMn+kcz7uMr5tvB8WfDg/L6rCpwhrefQW3QzS0Xct1CYZ2K/poiGFZyxWPzHl0
        IwiOEL2JYTJegB/zR5BJxQG1vFmFPR/4oWVT33f9L4BgmyLsIAfPiBO5OHIJOC1o1FT9Ei1Y
        cdIyVgzXWncRQvv93to7llSvyA7DEGGCCJkZxKx/E7ocZqK/mSIw3leq6XQjBRjtciV3OoZw
        KqHt5vNzYNFbx4KsSrZoKDtkWxi1LZrQvV7wl+vofvnWcbTgvdypihv4zV9S16kj0GQTfVeN
        +ZRyy2S1a7nQ9yyG5saqmzpyE4/ZjHqJ2YzZdpCmXkbsgtI8dyhOphiXuDkOi9DGTp4X2LZz
        mgZOmoc0JTlLigSziXsvel2Kik/c5g+XXOVGmeKllmop5XbqgMe11LJfyw5kTx749NyIWu77
        z+P3nDLlqvnJ60LJFhzfN2ou6AdBUbCApMz1c6PvBJSFAfZyxyWJTzwfnrj1hbpP3Oy/XGSS
        Qf80y+QyHTgez61vjPPwcGEmRpnR+ADj8AbzSrDDcwAAAddJREFUWIXdmL1qwzAURo9LCR06
        Bbp0KF0zBbJlaPFW6NLFDxHIS/hVQl6gz5AMXUqgU8hWCHQp2VIasriLFWzZ1o+lJKIf3MEY
        fTpcydL1jbIsI2RdnBtAp+ABL4sPURTZjO0DQ2AA9IB74CZ/9w18AktgAbwBH6bGpW2XZdkh
        DBQBCTAFNkBmGJt8TJJ7aAEPTBaAMTCxgGqKSe7lFXAMrDzAiVjlns6AHSAF9h7hROxz744L
        YHoEMDnStoDjI2WuLpOl5TYBjPG750z2ZGwKGOHna7WNST63FjDRGLlK5Z3IgHVX3YsHiLaq
        zi1lsI/+hnCVynsD9FUZHAJdDxBt1c0ZDpIBBwYmqgxsgVtHyBKDDNhzMP4BnoEvB48qg7QH
        17Q7IrbAoyGAzmutOmZ2nuHuWgDufAKq4J6AX9+ANktsAld3LDkt8dwzXBvAueocXDZMWpT4
        WmcNcK/AlYFPk8oMUgZH+Mtc2wyOVEusuuq2wIMlnC1g5aqrq2amDYPfgWtLOFvAKUhMluXW
        TILUwdkCVsqtNgWrgDSBswnjghX0Jf/CM5xVyS8U9E+TUHoCwFSe9F/9uAsF2/ooKibg5pHQ
        ydtvUREsxAZmZJi5syn4HnXwgH9B/GgxJT5v8QAAAABJRU5ErkJggg==
      </shape>
      <shape name='Arrows/1-5.png'>
        iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAAACXBIWXMAABJ0AAASdAHeZh94
        AAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAgppVFh0WE1MOmNvbS5h
        ZG9iZS54bXAAAQBVVEYtOABYTUw6Y29tLmFkb2JlLnhtcAAokX1T3W6bMBR+Fcu92aQFG4P5
        U1kFGLRepKvSSN0tAbdBCTYyzkLzar3YI+0VaqKQTVMW+8bn+PvOd459zu3d0JXVhmuw4q+N
        iOHv918QNHUMn+kcz7uMr5tvB8WfDg/L6rCpwhrefQW3QzS0Xct1CYZ2K/poiGFZyxWPzHl0
        IwiOEL2JYTJegB/zR5BJxQG1vFmFPR/4oWVT33f9L4BgmyLsIAfPiBO5OHIJOC1o1FT9Ei1Y
        cdIyVgzXWncRQvv93to7llSvyA7DEGGCCJkZxKx/E7ocZqK/mSIw3leq6XQjBRjtciV3OoZw
        KqHt5vNzYNFbx4KsSrZoKDtkWxi1LZrQvV7wl+vofvnWcbTgvdypihv4zV9S16kj0GQTfVeN
        +ZRyy2S1a7nQ9yyG5saqmzpyE4/ZjHqJ2YzZdpCmXkbsgtI8dyhOphiXuH5eZEERZnle2Lad
        0zRw0jykKclZUiSYTdx70etSVHziNn+46VVulCleaqmWUm6nDnhcSy37texA9uSBT8+NqOW+
        /zx+zylTrpqfvC6UbMHxfaPmgn4QEswKnzLXz42+E1AWBtjLHZckPvF8eOLWF+o+cb3/cpFJ
        Bv3TLJPLdOB4PLe+Mc7Dw4WZGGVG4wNazwcrvsTtVgAAAlNJREFUWIXdmLtOHDEUhj9HiBJI
        EDfR0KZaiY5upbxAiLZNj8RLzHPQrfYJeAZWWQWJjchFsF0kikSKlpoghFPkGDwzHo/tGcIo
        v3SKHfv85xt7PeOx0lrTZb14boA6dR5wwf6hlIrJ7QF7wC7wGtgB1qTtF/AduACmwAQ4DzXO
        /e201g8RIAUMgBEwB3RgzCVnIB61gA9MEYB9YBgBVRVD8WoV8BCYtQBnYiaejQEXgQy4bRHO
        xK14LzYBzJ4ArBhZKuBhwsh9Ab4mjGRuukMA+8T/5y6BLYnLyNwZ1sKpA1TEr9YLATPakmsx
        HkOpXQs4iDT+BmxQ1oa0xXgNQgBHEYafgXUHnNG69An1G9UB9gh/Q3zi8dXm05r0DfGcAz0f
        4EGg0RRYDYAzWpWcEO8Dm6m4m9kNKHYGvJG7DdVccs4C+uYZCiN4gv/uToGVCLCiVoCPNTVO
        fFN85UmcAMuOosvA2HF97On/wVPnygd4U5E0BpYcxV7xd1S1o82M+EtH25J4umrdpAC+cxQp
        rk4XoFlQrtX+NgWwaop/A/uW+Sblh3AVoJa+m1bbvnhGT7FvkdwB74Ft3O9aH6CWnG3xuPPU
        8S6SI0+iBu6BHxVtdYAa+CkevhpHNtNCwXTqKGRLkZ+qWLne2UXlGIoP6glw3QCgqa6F4VEN
        NwuxU1wXpc2C68P9OP7GW1O5dksb1jZGMHjDCmlb/iaAUVt+o9iPplTApI8moyxyJFIiK93Z
        //ThbtTZow9bfTp8eGT0z4/flA3WxQNMFThyz6bOn1F3HvAP822BAz9G1GIAAAAASUVORK5C
        YII=
      </shape>
      <shape name='Arrows/1-6.png'>
        iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAAACXBIWXMAABJ0AAASdAHeZh94
        AAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAgxpVFh0WE1MOmNvbS5h
        ZG9iZS54bXAAAQBVVEYtOABYTUw6Y29tLmFkb2JlLnhtcAAokX1TS27bMBC9CsFsWqAWKeov
        RA0kUUKzcBo4BtKtLDExYUsUSLpWfLUseqReIZRhuUXhmtxwhu/NmyFnbu+Gvqo3TIMVe+Vd
        An+//4KANwl89uZ43udszb8dJHs6PCzrw6aOGnj3FdwO8dD2LdMVGNptp+IhgVUjViw259GN
        IDhC9CaB6XgBfswfQS4kA57lz2rsByCILNsLAjf4Agi2PYQd5OAZcWIXxy4BpwWNmmxe4gUt
        T1rGSuBa6z5GaL/fW3vHEvIV2VEUIUwQITODmKm3TlfDrFM3UwTKVC15r7nowGhXK7HTCYRT
        CW0/n58Dd8o6FmTVokVD1SPbwqht0YRWesFerqPV8q1naMGU2MmaGfjNX1LXqSPQZBN/l9x8
        SrWlot61rNP3NIHmxmp4E7upT23q+anZlNp2mGV+TuzS84rC8XA6xbjE9UuKcVHkRVES2y68
        LHSyIvIyUtC0TDGduPed0lVXs4nL/3Czq9w4l6zSQi6F2E4d8LgWWqi16EH+5INPz7xrxF59
        Hr/nlCmT/CdrSilacHzfmF/QDyOCaRlQ6gaF0XdCj0Yh9gvHJWlA/ACeuM2FusPISd3AT//L
        RSYZ9E+zTC7TgePx3PrGOA8P68zESDMaHzi1BxV0IyPjAAAB1klEQVRYhd2Yv0oDQRCHvxUJ
        FqkCNjbapgqkSyPpRBube4hAXuJeJeQFfAZT2IhiFdIJARtJpyakWQv3Qm5zt7u3u0kOfzDF
        cbczH7P/5kZIKamzTo4NYFPtAU+3H4QQVcZ2gB7QBdrAFXCu3n0C78AUeAGegDdXx7llJ6Xc
        mIMEkABjYAFIR1uoMYnyYQXcMFUA7AOjClBlNlK+ogIOgVkEuMxmymcwYANIgXVEuMzWyncj
        BDDdA5huqS/gcE+ZK8pkbrpdAPvEXXMua7LvCiiIs1ur2kjFtgImFkehMvlOdMCiq+4+AoSv
        dmNrGexgvyFCZfK9ADqmDPaAVgQIX7UUw0Y6YDcwwAXwTdgM5Bh0wHYg4AdwC/wE+MgzaGtw
        jv04cNE19kyW2dx0zKw8AC8NkF8egKvYgEvgJiKkEdBnimVkSOMUTzwBY0JOTOfgtCSAi86A
        hxLIR+COv41jU55By+AA/wzGyuTANMU+V13RN76QO1ddUTUzjgBogmwCzyVjxqAxRSi3TN/q
        kE3MG3Gn3DpEwZpB2uCcC1aIX/IvgVfD+0olf6Za/zRlSg8AmOpB/9WPe6batj621afGzaNM
        B2+/iW2wOjYwhWPmjqba96hrD/gLYSloOMD4nGEAAAAASUVORK5CYII=
      </shape>
      <shape name='Arrows/1-7.png'>
        iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAAACXBIWXMAABJ0AAASdAHeZh94
        AAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAhBpVFh0WE1MOmNvbS5h
        ZG9iZS54bXAAAQBVVEYtOABYTUw6Y29tLmFkb2JlLnhtcAAokX1TS27bMBC9CsFsWqAWKUrU
        h4gayKKMZqE2cAykW1liYsKWKFB0rfhqWfRIvUIpwzKKwgm54QzfmzdDztzeDV1ZbYUBa/Ei
        2wT+efsNgawT+EQLXHSZ2MhvRy0ej99X1XFbxTW8+wpuBzY0XSNMCYZm1/ZsSGBZq7Vg9jy6
        EQQniNkmMB0vwM/iAWRKC0CdYFbhIARh7Lg0DP3wCyDYpQh7yMMz4jEfM5+A84JWTdfPbMkX
        Zy1rJXBjTMcQOhwOzsFzlH5BbhzHCBNEyMwiZv1ra8ph1vY3UwQu+krLzkjVgtEu12pvEgin
        EpquKC6B2945FeRUqkFD2SHXwahp0ITuzVI8f4zuV6+dQEvRq72uhIXf/CP1MXUE2mzYDy3t
        p5Q7rqp9I1pzzxNob5xa1sxPA+5yGqR2c+660XweZMRdUJrnHsXpFOMal+Isznnq5/kCu25O
        55E3z2M6J9a5SDGfuPdtb8q2EhNXWi73/CgmPs4t+V0uy7QojdIrpXZTBzxslFH9RnUgewzA
        pyfZ1urQfx6/55yp0PKXqBdaNeD0vkxe0Y9iL/XD0OV+mFt9L6I8jnCQez5JQxKE8Mytr9R9
        5pJ3ucgmg/5rlsllO3A8XlrfGpfhEa2dGG1H4y/gQwawye26xAAAAdNJREFUWIXV2LFOAjEY
        wPF/1bCb6O7qROLmxkPwAm4kvMS9hhgxhLirgz4AgwsxOhE2E0bDTljqQEuOC9f26xXv/JIO
        BPr1x/V697VKa02T46hugC8aDzzJf1BKSfq2gWvgCrgELoBz890P8A3MgA/gHfgKTbxz22mt
        ty0gFNAFxsAS0IFtafp0TQ4vcGsSADvASIAqayOTKymwD8wT4Gybm5yVgS0gA9YJcbatTe5W
        FWAWMfA9MBX8PosF9iOu3C2bRXAqQK4pTHcIsIP8nrM4GxLknNzC8QEV8tVaxMHm3noT5BjZ
        HD5gNxHuVZhHm7G9wHFNOG3GdgLbhL8hUuO0GbvtAvZqxNnWcwEHkTgS4TQwcAEnkTgS4TQw
        cQEXHlzq2DfOwgVclXSaHgBXBlzlTZKKWlTNJgvBFA8PgBRPsW+RDIFjwWCVF0lximeef3wD
        3JUgnz19Q2PXEPmg3nclW8BTYH9Xcz6oJa+6QyC9rzqQFQupkd5iAeTlVkpkULkVU7CWIV8E
        OYILVogr+YvIM+AzsK+o5LcRs2l6MEgJLmrTZCMTAjXwKMBpKmw74R9s3G009ugjHx0afHhk
        48+P31Qe1sQDTBV45WqLxp9RNx74CzFO1lecRMipAAAAAElFTkSuQmCC
      </shape>
      <shape name='Arrows/1-8.png'>
        iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAAACXBIWXMAABJ0AAASdAHeZh94
        AAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAgppVFh0WE1MOmNvbS5h
        ZG9iZS54bXAAAQBVVEYtOABYTUw6Y29tLmFkb2JlLnhtcAAokX1T0W6bMBT9Fct92aQF24Ah
        oLIKYtD6kK5KI3WvBNzGSrCRcRaaX+vDPmm/UBOFbJqy2C++1+fcc6997+1d35bVhhuw4q9C
        JvD3+y8IRJ3AZzrH83bG1+LbQfOnw8OyOmyqqIZ3X8FtH/dN23BTgr7Zyi7uE1jWasVjex7c
        CIIjxGwSmA4X4Mf8EcyU5oA6waTCQQjCyCE0DP3wC3AxoQh7yMMT14t9HPsuOC1o1XT9Ei9Y
        cdKyVgLXxrQxQvv93tl7jtKviERRhLCLXHdiEZPuTZqyn8juZozAeFdp0RqhJBjscqV2JoFw
        LKFp5/NzYNk5x4KcSjWoL1tEHIyaBo3oziz4y3V0t3xrOVrwTu10xS385i+p69QBaLOJv2th
        P6XcMlXtGi7NPUugvXFqUcd+GjDCaJDazRgh0ywLZi4pKM1zj+J0jHGJ62Ukj0KvyPPCJSSn
        2dTL8ohmbs7SIsVs5N7LzpSy4iNX/OHmV7nxTPPSKL1Uajt2wONaGdWtVQtmTwH49Cxkrfbd
        5+F7TplyLX7yutCqAcf3jcUF/WlEGc5oxPwwt/relLJoioPc8900dIMQnrj1hbpP3PS/XGST
        Qf80y+iyHTgcz61vjfPwcGknRtvR+AD3lQbgO9gtZwAAAc9JREFUWIXd2LFOAjEcx/HvGcKi
        ji4uujqRuLkYRh/gHoKEl7jnYCM8gYsvwMBiME6EjYTExcBkImGpgy3e9bi21yvQ+Ev+Azna
        ftLr5XpNhBDEnLNTA2yJHtjK/0iSpE7bDvAA3AN3wC1wJa99AgtgBkyBCfDu2nFh2QkhduWQ
        BEiBEbAChGOtZJtU9mEF7kw1gF1gWANVVUPZV1BgH5gHwKmayz4bA9tABmwD4lRtZd/tJsDs
        ADC9Ml9g/0Azt28mC7fbBdgl7Jr7Bt4M1+fkHhwbMCHM05rHPQGXwNjwv6Ec2wpMLQPqccGp
        XFiQqQtwFAio4/LI14o2Ixuwg/0N4QKswgE8Al8V7VZAxwTsWXAuQF+cqp4JOGgIbIoTwMAE
        NC1gGzAETgBjE3DpCQyFE8DSBNx4AEPiBLAJDbwJiLMCfW5xSFzpFuvfJAtHgA33Apx7ti8Y
        dODMs1OVa5rhSoaWdnHaoGOAD35fZabYlknBoM/gBFjXRIXMWhr+EmCzUDemvkubhX0f7s8B
        EL4pj32EDatrOW9YIfyW31a1tvwqUX80qWRHAGb6oP/qw10l2qOPfLpEfHikcvTjtyQPi/EA
        M3GcuZMl+jPq6IE/cctsJBq6BdAAAAAASUVORK5CYII=
      </shape>
      <shape name='Arrows/1g-1.png'>
        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
        4AAAAABJRU5ErkJggg==
      </shape>
      <shape name='Arrows/1g-2.png'>
        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
        xYnfoz7xwD/uCnVWmT59RAAAAABJRU5ErkJggg==
      </shape>
      <shape name='Arrows/1g-3.png'>
        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
        61LH31F3POB/RE9/gC9a19AAAAAASUVORK5CYII=
      </shape>
      <shape name='Arrows/1g-4.png'>
        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
        SUVORK5CYII=
      </shape>
      <shape name='Arrows/1g-5.png'>
        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
      </shape>
      <shape name='Arrows/1g-6.png'>
        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
      </shape>
      <shape name='Arrows/1g-7.png'>
        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
      </shape>
      <shape name='Arrows/1g-8.png'>
        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
        YM4HbDX9AAAAAElFTkSuQmCC
      </shape>
      <shape name='Arrows/2-1.png'>
        iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAAACXBIWXMAABJ0AAASdAHeZh94
        AAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAhxpVFh0WE1MOmNvbS5h
        ZG9iZS54bXAAAQBVVEYtOABYTUw6Y29tLmFkb2JlLnhtcAAokX1TwY6bMBD9Fct7aaUGPGAc
        gpauiA3qHtKuspG2VwLeDUrAyDgNm1/roZ/UX6hJQ7qqVjE+eMbvzZvBM7d3fZsXW2nQWr5U
        TYx///yFUVXG+ClYkEXL5ab6ctTy8fh1VRy3xazEd5/RbR/1dVtLk6O+3jVd1Mc4L9VaRvY8
        uF2MThCzjXEyXKDviwfElZYocPxJQQAQYw7QgDH4hDwCnkvsZhOgUcAib4rOC1s1XT5HS5Gd
        tawV440xbeS6h8PBOfiO0i8uzGazIYbnTSxi0r02Ju8nTXczRhCyK3TVmko1aLDztdqbGOOx
        hLpdLC6Bm845FeQUqnb7vHXBIW5duyO6M0v5fB3drV5b6S5lp/a6kBZ+80bqOnUA2myib7qy
        j5LvhCr2tWzMvYixvXHKqoxowgSIgCX2EwIgnM8Z9yALgjT1A5KMMd7jAk8SmKaBoCEDSP05
        iEz4nBIyt77UH7n3TWfyppAjt/rHpVe5EdcyN0qvlNqNHfCwUUZ1G9Ui/sjQh6eqKdWh+zg8
        zzlTqasfssy0qtHp/0bVO/rzLPFImvHwpAaQeCEJwaecTmeUMFv3X275pu793hIzyrOAcgJi
        GooUYD4NIM0SESbgpRwodm0m7n+dMrps+w3HS99b4zI5srHjou1c/AEwcgWl7Orr+QAAASdJ
        REFUWIXt2L1qAkEUQOEzwcezCISQIkWQQIoUQbCwsBAfe2WYsfCursnG+bmzanEPLFjs3PmY
        bXZ1MUYeuad7A1LN+h/OuZJ1tceevUn/ZB/+BA2ozYDaDKjNgNoMqM2A2gyozYDahsA50HF8
        W05dteXM7sQiK2Jk8OH0XICc4urEcHb9AgK8APs74Pay9+XBjQABXgF/Q5yXPU+lgABvN0J6
        2euiHCDA+8RIL3v8KRcI8DER0svs0UqAAAsgNMQFmflvpUCAz0bIILOuVgME+FIig8xIVgsE
        +K5EBlmblQYI8FOIDLImOy0QYFkAXJYObwEEWGXgVjWDWwEB1ldw69qhLYEAmxHcRjOwNRBg
        O8BttcN61yx9a3Y7zi/Au1ZDnf3Lr+wAL276bpGt5NcAAAAASUVORK5CYII=
      </shape>
      <shape name='Arrows/2-2.png'>
        iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAAACXBIWXMAABJ0AAASdAHeZh94
        AAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAhxpVFh0WE1MOmNvbS5h
        ZG9iZS54bXAAAQBVVEYtOABYTUw6Y29tLmFkb2JlLnhtcAAokX1TwY6bMBD9Fct7aaUGGDAO
        oKUrsEHdQ9pVNtL2SsC7QQkYGadh82s99JP6CzVpSFfVKrYPHvu9eTP2zO3d0BXlVmi0Fi91
        G+PfP39hVFcxfvIXzqJjYlN/OSrxePy6Ko/bMqzw3Wd0O0RD0zVCF2hodm0fDTEuKrkWkdmP
        xzZGJ4jexjgZL9D3xQNiUgnkW96sdAAQpRYQn1L4hFwHXNsxi86ARD6N3Dk6D2zUVPUcLXl+
        1jJWjDdad5FtHw4H6+BZUr3YEIbh6MN1ZwYx619bXQyztr+ZPHDRl6rudC1bNNrFWu51jPGU
        QtMtFhfHbW+dErJK2dhD0dlgOXbT2BO610vxfB3dr147YS9FL/eqFAZ+80bqOnUEmmiib6o2
        n1LsuCz3jWj1PY+xubGquopIQjlwnyZmcg4QpCllLuS+n2We7ySTj/e4wNKMszDkJKAAmZcC
        z7nHiOOkPieZN3Hv214XbSkmbv2PG1zlRkyJQku1knI3VcDDRmrZb2SH2CNFH57qtpKH/uP4
        PedIhap/iCpXskGn943qd/TTPHGdLGfBSQ0gcQMnAI8wMg+JQ03ef7nVm7z3e0PMCct9whzg
        84BnAOnchyxPeJCAmzEg2DaR2P9VynRkym/cXureGJfOEa1pF2X64g90FgXddlMR1AAAAQpJ
        REFUWIXt2E0KwjAQBeAXkZ4oq17Dc7aCHqyuBR03tdjan0zyJs2iD2aTH/gITAJxIoKSc9ob
        sJUDmJrzdMA5t7WnAtAAeIrIJWB9cGb7QURGFYC7A5C+GmaTTS0iogJOcQOyBOASjoqMBVYA
        biu4b7V7AENxDKTXArW4FKQH0GmAsbgYpAfQAZBQYCpOgxxwGiADF4Ic4TTAKxG4hPzDBQMz
        IGdxmhO0RNZLOBXQEPlam1df1EZIHjA3MvYtzoaMBuZCJgF/kG2xQGskBWiJpAGtkFSgBZIO
        7FMDeJcK9AAeDJwFkIpjA+k4JtAExwKa4RhAU1wq0By3BHSRd1+2FP+BeQBTUzzwA32nr7Xm
        hF58AAAAAElFTkSuQmCC
      </shape>
      <shape name='Arrows/2-3.png'>
        iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAAACXBIWXMAABJ0AAASdAHeZh94
        AAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAhxpVFh0WE1MOmNvbS5h
        ZG9iZS54bXAAAQBVVEYtOABYTUw6Y29tLmFkb2JlLnhtcAAokX1T0W6bMBT9Fct92aQFfME4
        BJVVYIPWh2xVGql7JeA2qAUj4yw0v7aHfdJ+YSYLWTVVsf3ga59zz732vdc3Q1eUz9KgjXyq
        2xj//vkLo7qK8UOwJMuOy2395aDl/eHrujw8l4sK33xG10M0NF0jTYGG5qXtoyHGRaU2MrL7
        8djF6AgxzzFOxgv0fXmHuNISBY4/KwkAYswBGjAGn5BHwHOJXWwGNApY5M3RaWCrpqvHaCXy
        k5a1Yrw1potcd7/fO3vfUfrJhcViMfrwvJlFzPrX1hTDrO2vJg9C9qWuO1OrFo12sVE7E2M8
        pdB0y+XZcds7x4ScUjXuUHQuOMRtGndC92YlHy+j+/VrJ92V7NVOl9LCr95IXaaOQBtN9E3X
        9lOKF6HKXSNbcytibG+cqq4imjABImCJnUIAhGnKuAd5EGSZH5Bk8vEeF3iaCZ6AoCEDyPwU
        RC58TglJA0Ezf+Letr0p2lJO3Pofl1zkRlzLwii9VuplqoC7rTKq36oO8XuGPjzUbaX2/cfx
        e06RSl3/kFWuVYOO7xvV7+ineeKRLOfhUQ0g8UISgk85nS8oYTbvv9zqTd67nSXmlOcB5QTE
        PBQZQDoPIMsTESbgZRwodm0k7n+VMh3Z8hu357q3xrlzZGvbRdu++AN0JgXddsu2/gAAARBJ
        REFUWIXV2DFrwkAchvEnFfLd7FAcSofSQeggDoKLdJBuTo6dujk5CQU/niJ9HeSkQ8Fccnd5
        Pcj68CMhl3+ukoTzeugbcHNJIvFdHKaIXF0ZgAfgqWskJ1BckM+dIpmBAk7Aa+tIAWBAjltF
        CgEF/AITZ2BAzpyB4Vq4AwUs3YECVu5AAetYYNNwyusLqJyBAr7/QzoBBWyAgTNQwPYv0hEo
        YAfUzkABe6B2Bgr4Ca67Gvn7vmt38YitXxLrbWaD8UZt/amLGhZSraa46HGrJNB6YP1sFOkJ
        +NE40sNv5zwqUvjHfRodKXj08d4qUujw6K11JDPwCLx0imQ+wBx1jeQEPqaIBFeVGJd82Y/8
        Z5rGwsXmr8ExAAAAAElFTkSuQmCC
      </shape>
      <shape name='Arrows/2-4.png'>
        iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAAACXBIWXMAABJ0AAASdAHeZh94
        AAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAh1pVFh0WE1MOmNvbS5h
        ZG9iZS54bXAAAQBVVEYtOABYTUw6Y29tLmFkb2JlLnhtcAAokX1T0W6bMBT9Fct92aQF+4Ih
        BJVVxAatD9mqNFL3SsBtUAJGxllofq0P+6T9wkwWomqqYvvB1z7nnnvte2/v+jYvttKgtXyp
        mhj/efuNUVXG+Mlf0EXL5ab6dtTy8fh9VRy3xazEd1/RbR/1dVtLk6O+3jVd1Mc4L9VaRnY/
        HBOMThCzjXEyXKCfiwfElZbId7xJQQFQEDjA/CCAL8il4BJqVzABFvlB5E7ReWCrpsvnaCmy
        s5a1Yrwxpo0IORwOzsFzlH4hMJvNBh+uO7GISffamLyfNN3N6EHIrtBVayrVoMHO12pvYozH
        FOp2sbg4bjrnlJBTqJr0eUvAoaSuyYjuzFI+X0d3q9dWkqXs1F4X0sJv3kldpw5AG030Q1f2
        U/KdUMW+lo25FzG2N05ZlRFLAgHCDxI7hQAI5/OAu5D5fpp6Pk1GHx9xgYs08QQVLAwAUm8O
        IhMeZ5TOfcFSb+TeN53Jm0KO3OrC5dlVbsS1zI3SK6V2YwU8bJRR3Ua1iD8G6NNT1ZTq0H0e
        vuccqdTVL1lmWtXo9L5R9YH+PEtcmmY8PKkBJG5IQ/AYZ9MZo4HN+x+3fJf3fm+JGeOZzzgF
        MQ1FCjCf+pBmiQgTcFMODBMbCfmvUsYjW37D9lL31rh0jmxsu2jbF38BZ8kF1eNyJXoAAAEU
        SURBVFiF7dgxEsIgEAXQj0VOpI3ewqt4r1jowawtXAujMyEJWdj9SJE/Q0fgwQR2kiAiaDm7
        fwPWsgGtaR4IERm1hRwAPAAIs8UWEVEDqyCtQDrSA0hFegFpSE8gBekNdEcygABwAvBiAU0X
        9bCgC4BgGWd1kpIdHPr2aPEdZODcgCycC5CJMwPZOBOwBq4YWAtXBKyJywaScMmKowaScFcA
        RyRqtwpIxH2zX0Jqd5CJSyK1wBsZt4jUAjsnZAo3i8w5xR2AOxk3Qebeg6XIHNwIWVJJcpEl
        uB+ytBZrkRYcgKlFC9QgzTgrMIV0wXkA55C94hkTMMQThLD6gdbhU22eInJW9M8CxpkAW0vz
        PzA3oDVv396FxzahqKMAAAAASUVORK5CYII=
      </shape>
      <shape name='Arrows/2-5.png'>
        iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAAACXBIWXMAABJ0AAASdAHeZh94
        AAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAhxpVFh0WE1MOmNvbS5h
        ZG9iZS54bXAAAQBVVEYtOABYTUw6Y29tLmFkb2JlLnhtcAAokX1TwY6bMBD9Fct7aaUGPIAd
        QEtXgEHdQ9pVNtL2SsC7QQkYGadh82s99JP6CzVpSFfVKrYPHvu9eTP2zO3d0BXlVmi0Fi91
        G+HfP39hVFcRfqILsuhSsam/HJV4PH5dlcdtGVT47jO6HcKh6RqhCzQ0u7YPhwgXlVyL0OzH
        YxujE0RvIxyPF+j74gGlUglELXdWEgDEmAUeZQw+IYeAYxOz2Ay8kLLQmaPzwEZNVc/hkudn
        LWNFeKN1F9r24XCwDq4l1YsNQRCMPhxnZhCz/rXVxTBr+5vJAxd9qepO17JFo12s5V5HGE8p
        NN1icXHc9tYpIauUjT0UnQ0WsZvGntC9Xorn6+h+9doJeyl6uVelMPCbN1LXqSPQRBN+U7X5
        lGLHZblvRKvveYTNjVXVVejFjAOnLDaTcwA/SVjqQE5plrmUxJOP97jACfiEBtzzGUDmJsBz
        7qYeIQnlXuZO3Pu210Vbiolb/+P6V7lhqkShpVpJuZsq4GEjtew3skPpI0Mfnuq2kof+4/g9
        50iFqn+IKleyQaf3Det39JM8dkiWp/5JDSB2fOKD66XePPAIM3n/5VZv8t7vDTH30px6KQE+
        93kGkMwpZHnM/RicLAUP2yYS+79KmY5M+Y3bS90b49I5ojXtokxf/AHGAwVNCvSvjAAAAQlJ
        REFUWIXt108LgjAYBvBn0acrKIgQCooQPHgIxIMHD9LXrsx12SujPzp95+ZhDzzoQbcfmwcn
        pJSYcxa+AX1Z0o0QwsZ4t4/r6LQ7K6WEpW2uAEjVijtY67IELDUctZwLsPiBoxa+gXkHjpr7
        AmYGOGrmGngF0AwANuodJ8B0IE5HplMDk5E4HZlMBYyZOB0Z2wZeALws4KgvNaYV4BlAbRFH
        rQGcuMDjRDgdeRgLjCbG6choKHDvCEd9qjmNgDsAD4c46l3N3Qncqgdd43Tk5h9w7RmnI1fk
        ErR6A/+ovz5awxhPQq7Zn0kCkJsA5CYAuQlAbgKQmwDkJgC5CUBuRM+h3Xtmv4JvXLwaL+1q
        OOoAAAAASUVORK5CYII=
      </shape>
      <shape name='Arrows/2-6.png'>
        iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAAACXBIWXMAABJ0AAASdAHeZh94
        AAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAh9pVFh0WE1MOmNvbS5h
        ZG9iZS54bXAAAQBVVEYtOABYTUw6Y29tLmFkb2JlLnhtcAAokX1T0W6bMBT9Fct92aQF+wJ2
        CCqrCAatD9mqNFL3SsBtUAJGxllofq0P+6T9wkwWomqqYvvB1z7nnnvte2/v+jYvttKgtXyp
        mgj/efuNUVVG+Ikt6KJN5Kb6dtTy8fh9VRy3xazEd1/RbR/2dVtLk6O+3jVd2Ec4L9VahnY/
        HBOMThCzjXA8XKCfiweUKC0Rc7xJQQEQ5w74jHP4glwKLqF28Qn4IeOhO0Xnga2aLp/DpcjO
        WtaK8MaYNiTkcDg4B89R+oXAbDYbfLjuxCIm3Wtj8n7SdDejByG7QletqVSDBjtfq72JMB5T
        qNvF4uK46ZxTQk6hatLnLQGHkromI7ozS/l8Hd2tXltJlrJTe11IC795J3WdOgBtNOEPXdlP
        yXdCFftaNuZeRNjeOGVVhn7MBQjGYzuFAAjmc564kDGWph6j8ejjIy4ICJiXZsIPOEDqzUFk
        wkt8SudM+Kk3cu+bzuRNIUdudeJSCCinV7lhomVulF4ptRsr4GGjjOo2qkXJI0efnqqmVIfu
        8/A950ilrn7JMtOqRqf3DasP9OdZ7NI0S4KTGkDsBjQAz0/86cyn3Ob9j1u+y3u/t8TMTzLm
        JxTENBApwHzKIM1iEcTgpgn4mNhIyH+VMh7Z8hu2l7q3xqVzZGPbRdu++AvvNgVrJYIxZwAA
        AQ5JREFUWIXt2DEOgzAMBdCfquJGnXqMHqX3KkM5GHMH3KEUiRISGyexh34pGyIPBLGTQETw
        nJM1IJc/UBv3QBDRZgCgymMEcOF4LIC7OA/AJM4amMVZAlk4KyAbZwEU4VoDJwBXCS4GrLlQ
        BwB39V0afIMPjafVX8xGWq6DLKR1JckirYFZpAdgEukFSAB678AosgRwKo2c5ywCHPEpX30t
        pAa4FP75mirIo8BNV9IKyQEmNziFkYMUyNpDFEIOADoJUNpsapADgO77wByguBNWIBecBHgE
        dwS5wkmA2nCQG1xLYA75jOFaA/eQuzgL4C8yiYsBQwwUQqiBPAO4AXjlgCtLhTdWNO4PMP9A
        bd7iqnDnMS0a8AAAAABJRU5ErkJggg==
      </shape>
      <shape name='Arrows/2-7.png'>
        iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAAACXBIWXMAABJ0AAASdAHeZh94
        AAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAhxpVFh0WE1MOmNvbS5h
        ZG9iZS54bXAAAQBVVEYtOABYTUw6Y29tLmFkb2JlLnhtcAAokX1TwY6bMBD9Fct7aaUGewA7
        BC1dEQzqHtKuspG2VwLeDUrAyDgNm1/roZ/UX6hJQ7qqVrF98NjvzZuxZ27v+jYvttKgtXyp
        mgj//vkLo6qM8BNb0EWbyE315ajl4/Hrqjhui1mJ7z6j2z7s67aWJkd9vWu6sI9wXqq1DO1+
        OCYYnSBmG+F4uEDfFw8oUVoi5niTggIgzh3wGefwCbkUXELt4hPwQ8ZDd4rOA1s1XT6HS5Gd
        tawV4Y0xbUjI4XBwDp6j9AuB2Ww2+HDdiUVMutfG5P2k6W5GD0J2ha5aU6kGDXa+VnsTYTym
        ULeLxcVx0zmnhJxC1aTPWwIOJXVNRnRnlvL5OrpbvbaSLGWn9rqQFn7zRuo6dQDaaMJvurKf
        ku+EKva1bMy9iLC9ccqqDP2YCxCMx3YKARDM5zxxIWMsTT1G49HHe1wQEDAvmwo/4ACpNweR
        CS/xKZ0z4afeyL1vOpM3hRy51T8uv8oNEy1zo/RKqd1YAQ8bZVS3US1KHjn68FQ1pTp0H4fv
        OUcqdfVDlplWNTq9b1i9oz/PYpemWRKc1ABiN6ABeH7iT2c+5Tbvv9zyTd77vSVmfpIxP6Eg
        poFIAeZTBmkWiyAGN03Ax8RGQv6rlPHIlt+wvdS9NS6dIxvbLtr2xR/9XQV7tP7v8wAAARNJ
        REFUWIXN2DFrwlAUxfF/GshnKx3EQRyKQ6GDXTo6uTo5Ork5dbJQ+vEq0ucQbnkEXxLh1nsO
        ZH38eI8k590qpYRyHqIBg0kp4biLj14L/bkcgRPgx2Mh8AfOaHFuR+EJfAbOtDg54EsHJwVc
        Ar8dnAzwvYCTAK4KMAngegAXCtyMwIUBtyNxdwdWwO4GnNszBlgB+wjcGGANHKJwQ8Aa+IjE
        9QEb4BiNKwEb4Csa1gf8jEZdA+aVX7P+d474G4Hdo3DEhpR9SSzSn5kceVAGgvivLkfKloU8
        snUrj3RhtUhXfov0pckife20vBWQMkCAV4RHH5YFwsMjyxw4IQwEmCI8wLQ8eS1krsoR9y/R
        rPlZLjr+wroU9MDDAAAAAElFTkSuQmCC
      </shape>
      <shape name='Arrows/2-8.png'>
        iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAAACXBIWXMAABJ0AAASdAHeZh94
        AAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAhxpVFh0WE1MOmNvbS5h
        ZG9iZS54bXAAAQBVVEYtOABYTUw6Y29tLmFkb2JlLnhtcAAokX1TwY6bMBD9Fct7aaUGe8Am
        BC1dEQzqHtKuspG2VwLeDUrAyDgNm1/roZ/UX6hJQ7qqVrF98NjvzZuxZ27v+jYvttKgtXyp
        mgj//vkLo6qM8BNf0EWbyE315ajl4/Hrqjhui1mJ7z6j2z7s67aWJkd9vWu6sI9wXqq1DO1+
        OCYYnSBmG+F4uEDfFw8oUVoi7niTggIg33eAcd+HT8il4BJqlz8BFnI/dKfoPLBV0+VzuBTZ
        WctaEd4Y04aEHA4H5+A5Sr8QmM1mgw/XnVjEpHttTN5Pmu5m9CBkV+iqNZVq0GDna7U3EcZj
        CnW7WFwcN51zSsgpVE36vCXgUFLXZER3Zimfr6O71WsryVJ2aq8LaeE3b6SuUwegjSb8piv7
        KflOqGJfy8bciwjbG6esypDFvgDB/dhOIQCC+dxPXMg4T1OP03j08R4XhBd7jAvBAh8g9eYg
        MuEljNI5Fyz1Ru5905m8KeTIrf5xk6vcMNEyN0qvlNqNFfCwUUZ1G9Wi5NFHH56qplSH7uPw
        PedIpa5+yDLTqkan9w2rd/TnWezSNEuCkxpA7AY0AI8lbDpj1Ld5/+WWb/Le7y0xY0nGWUJB
        TAORAsynHNIsFkEMbpoAw8RGQv6rlPHIlt+wvdS9NS6dIxvbLtr2xR8L9gWHqqZQLgAAAQZJ
        REFUWIXt2D0OwjAMBeAXhDgRE+fgnIDgYswMNQMpok1wnF976JO8VJHyDU2cxBERLGenDUhl
        A9ZmH/vonGs9z8XPdQbw4gYGa4KIguqAI193AIcUcGHpDPzFiZAjgTFcEjkKyOFYpBR47Iyb
        67FGSoHPQmQOLoqUAqkAWYILkDlAEdKPr8EtkLlAFtkQ90WWAKPIDjgCcCsFLpCjcLnAGXnq
        gLvO+28tkABMvXCtgE1xWMUSMMBZAkZxVoB/cRaALE4bmMRpAkU4LaAYpwHMwo0GTvi0RbNA
        QsHJXOMfzEJqrWIxUnMfFCG1O4nojqPdi1mkBSCLXFucB5mN+QfMDVgb88A3uxea25co65sA
        AAAASUVORK5CYII=
      </shape>
      <shape name='Arrows/4-1.png'>
        iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAAACXBIWXMAABJ0AAASdAHeZh94
        AAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAh5pVFh0WE1MOmNvbS5h
        ZG9iZS54bXAAAQBVVEYtOABYTUw6Y29tLmFkb2JlLnhtcAAokX1T3W7bIBR+FURvNmkxYBv8
        o3qVA7bWi2xVGqm7dWzaWImNhcni5tV2sUfaKwxncVZNVYCLcw7fd37gnNu7oSvKrTRgLV/q
        NoG/f/6CoK4S+EQXeNFxuam/HLV8PH5dlcdtGVXw7jO4HeKh6RppCjA0u7aPhwQWlVrL2Mqj
        GUFwgphtAtPxAnxfPACutATU8WYlJgQw5hCfMkY+ARcTF2F72Iz4MWWxG4Dzgjaarp7jpcjP
        sayWwI0xXYzQ4XBwDp6j9AsiURSNPlx3ZhGz/rU1xTBr+5vJg5B9qevO1KoFo16s1d4kEE4l
        NN1icXHc9s6pIKdUDRqKDhEHo6ZBE7o3S/l8Hd2vXjuJlrJXe11KC795E+o6dQTabOJvuraf
        UuyEKveNbM29SKC9caq6iv2UCSIoS+0WgpBwPmfcJTmlWeZRnE4+3uMGwsKzPBd+yAjJvLnH
        WRilOMCU4HngTtz7tjdFW8qJW//jZle5MdeyMEqvlNpNHfCwUUb1G9UB/sjAh6e6rdSh/zh+
        zzlTqesfssq1asDpfeP6nfgcpy7Och5S4WceIakb4pB4PveDyMfM1v2XW72pe7+3xNznOfU5
        JiIIRUbIPKAky1MRpsTNOPEhspmg/zplMtn2G8VL31vlMjmyteOi7Vz8Aes8BVoL4iYiAAAC
        dUlEQVRYhe2Yy0obURiAv9TMJVG7KV3kKu0iJkazqW/hA9gaqAsJuHAh4sKFUF10UbAiQSte
        6g1CEkTwQdoX6KL1gologqhIQRmmi45WNJPMzFHqYr5VOP//n/Mlkznn53h0Xecp8+x/CzTC
        e/3h7bu0nTqnP7un1mAhnzMt8JpGGvDh53db+ZOv3zha58k/YldQFFdQFFdQFFdQFFdQFFdQ
        FFdQlCcveLthfQGUALlRUffZse2Fus+O+fb8Zc1O/E43fwkEC/lc9a5gFegFiu/LP+RXv89t
        S9Sjp7JHT2XPNP7L18pGIHYJ9F7Lwf1HvA30bQRiVzu+1gcVrMfOX7kroK+Qz23fjtX6D24B
        6fVATNtVH19yV21lPRDTgHQhn9u6Gzd7STaB9Fowpu2rLY8mt6+2sBa8kduslVPvLS4C/SvB
        du1AaX5wuQOlmZVguwb0F/K5olleo20mBwwsh+Ja6QElS0ozy6G4BgwYa5hiZR9cBzJLobhe
        VvzCcmXFz1IorgMZY+66WN2oV4HMYiihH8rOJQ9lP4uhxLXcqpUaOyfJV2BwIZzQj2Sfbbkj
        2cdCOKEDg8ZclrB71C0CQ/PhDr0iqZaLKpLKfLhDB4aMOSzj5Cz+AgzPRZJ61YJkVVKZiyR1
        YNiotYXTZiELjMxGkpxIimnSiaQwG0kCjBg1thHpZmaA0Wykk1Pv/f7i1CuTjXQCjBq5jhBt
        tz4DYzPRLs690s3guVdiJtoFMGbkOEZI0Lh4/ASMT0dTXDRJXDRJTEdTAONGTAjhhtWQ/AhM
        TLWlmGpLAUwYY3VvT63g+IYV7jWak/z7wpMmObbxuLf8gvwB/AOiNP3TcXUAAAAASUVORK5C
        YII=
      </shape>
      <shape name='Arrows/4-2.png'>
        iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAAACXBIWXMAABJ0AAASdAHeZh94
        AAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAh5pVFh0WE1MOmNvbS5h
        ZG9iZS54bXAAAQBVVEYtOABYTUw6Y29tLmFkb2JlLnhtcAAokX1T3W7bIBR+FURvNmmxwQb8
        o3qVA7bWi2xVGqm7dWzaWImNhcni5tV2sUfaKwxncVZNVYCLcw7fd37gnNu7oSvKrTRgLV/q
        NoG/f/6CoK4S+EQXaNFxuam/HLV8PH5dlcdtGVXw7jO4HeKh6RppCjA0u7aPhwQWlVrL2Mqj
        2YXgBDHbBKbjBfi+eABcaQmo489KhDFgzMGEMoY/AQ9hz0X2sBkmMWWxF4Dzgjaarp7jpcjP
        sayWwI0xXey6h8PBOfiO0i8ujqJo9OF5M4uY9a+tKYZZ299MHoTsS113plYtGPVirfYmgXAq
        oekWi4vjtndOBTmlatyh6FzsILdp3Andm6V8vo7uV6+ddJeyV3tdSgu/eRPqOnUE2mzib7q2
        n1LshCr3jWzNvUigvXGquopJygQWlKV2C4FxOJ8z7uGc0izzKUonH+9xA+FlVBAiSMgwzvy5
        z1kYpShAFKN54E3c+7Y3RVvKiVv/4/pXuTHXsjBKr5TaTR3wsFFG9RvVAf7IwIenuq3Uof84
        fs85U6nrH7LKtWrA6X3j+p34HKUeynIe2iQyH+PUC1GIfcJJEBHEbN1/udWbuvd7S8wJzynh
        CIsgFBnG84DiLE9FmGIv45hA12bi/tcpk8m23yhe+t4ql8mRrR0XbefiD5UoBRLOgffOAAAB
        wklEQVRYhe3YTU7CQBjG8X+NcUd01Qt4BIkLT8BCE6gJadNrcAyu0ZSFgCtjgjtvQNiyUeMh
        TExdOCVV+jHvTD9Y8KzIlNJfZujMvOMkScIh56RrQFWOQNucSm/wg/AMmANfszi6V21WiFkc
        FV5zJC9JBnermhYpUvN+MbCyBzM/usNNL58BmGwHnh+EcwlSGt3/4B4OQH32/CCc10/7TeUQ
        q2F9AO6yuGwm2wHAEvBMEGVDXNqDOjjY9eQIWJgA1bN6IqAuLo0N0g/CPvCmDZTiLJF9YAVc
        aAFNcYbIPrAau5tcXC7QBpdGE7nDXfc+Cr+UB/w2lmVSgdTCQQ5wFkcj4FFNHU0gtXG5QJWm
        kDcSXCFQTZxNIF8Dd62Ng4qVRK3DS2Bo89KkSXBwyH/eZDtgFkfO//bSlaTunizClUV3s1Ab
        UhrJjroTpHTLPwKWbSJNahKPFpGmRVNrSJuqrhWkbdnZOLKyaCrbjgP4QTgFhgk4e7NsDbHq
        QbUTfgrcdSM4sAAq3MvY3Zxf9T5rJP2NETCLkyz8JhED28SBENg2DgTALnCgeXikiup34LxJ
        TN5+UHS61UUO/gDzCLTNwQN/AJozxZvG7+F/AAAAAElFTkSuQmCC
      </shape>
      <shape name='Arrows/4-3.png'>
        iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAAACXBIWXMAABJ0AAASdAHeZh94
        AAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAh5pVFh0WE1MOmNvbS5h
        ZG9iZS54bXAAAQBVVEYtOABYTUw6Y29tLmFkb2JlLnhtcAAokX1T3W6bMBR+Fcu92aQFY8AG
        rLKK2KD1IluVRupuCbgNSsDIOAvNq+1ij7RXmMlCVk1VbF+cc/x958c+5/Zu6IpyKw1Yy5e6
        TeDvn78gqKsEPpGFu+i43NRfjlo+Hr+uyuO2jCt49xncDmxoukaaAgzNru3ZkMCiUmvJrDya
        EQQniNkmMB0vwPfFA+BKS0Acf1a6GANKHRwQSvEn4LnYQ649dIYDRijzQnBe0EbT1TNbivwc
        y2oJ3BjTMYQOh4Nz8B2lXxCO43j04Xkzi5j1r60phlnb30wehOxLXXemVi0Y9WKt9iaBcCqh
        6RaLi+O2d04FOaVq0FB0CDsuaho0oXuzlM/X0f3qtZNoKXu116W08Js3oa5TR6DNhn3Ttf2U
        YidUuW9ka+5FAu2NU9UVC1IqsCA0tVsIjKP5nHIP54RkmU/cdPLxHjekYc79OBOEcIwzP6ZR
        FPl5mOYicmMRTtz7tjdFW8qJW//jiqtcxrUsjNIrpXZTBzxslFH9RnWAP1Lw4aluK3XoP47f
        c85U6vqHrHKtGnB6X1a/Ez9wYz+PgjnhgmQ+xqkXuRH2Ax6EceBSW/dfbvWm7v3eEvOA5yTg
        LhZhJDKM5yHBWZ6KKMVexnEAkc0E/dcpk8m23yhe+t4ql8mRrR0XbefiDzT3BZYYnczoAAAC
        fElEQVRYhe2YS2sTURTHf5PESBAKqcaiIILoQnDfdb9AVi2mrZRqwVp8i9ZHm0qxARNBJRa1
        0KqItcG6EL+Aaz+AIFhQfKCxTVsQKSadjIs7GcY0nTxm7mQWHriQmXvOP7+czL3nzFU0TcPL
        5ms2QDULlD7Eunud0twPLNQTkJmb3XRORgbfAVGnxGQABoF5oNMJMSnP4PBAOAhkgB67WlIA
        D+4Lcu14qx94CvTb0ZK2ig/s3UJ8qNUPPAIGG9VRSvugg6tYe5xoMy6+fF9nbDIHcAa4Vy24
        fEVL3wf37AqQOLcdIA1cqjfelY16dyRA6uIOgBQwUk+sa5UkEvZz+3IEYEIfNZmrpS7c4mNy
        NAIii6laYsyAmhOjoz1k+YXbQj4eXt8J4nlMA4qVf8B8YV59Mm1rUGHmRhsD8expROUZQvzA
        Dda0bsbnMxIyiNgr/RX93ISqZDpkP6LqbIBsOiAYkD1AJtbdGzTPeQIQDMhOYN4M6RlAMCCj
        iE4I8BhgJfMU4NGRLMBrIFa65xlAHe4l0JWZm82X7nsCUId7jshc3jzXdEAd7gnQB6jl800D
        LBYNuCngGBXgoKwW6wG2rKM9RF+0xdLnT17jxPhPEB32WTapw/BvBhUnxpu3a5Zwv9eKJbhb
        iNcAy7MXV//i1V9FTk0sAiSA4VpiXAPMraqcv7kIMAaM1hoXqO5i334sqVy9swRwBUjWEysd
        8Gt2nXg6pwEXgLuVfKwOj6QCfvpWYPz+sgacBB40oiENcOFzgcTUsoromGca1ZEC+P5jnuT0
        iorolJ/Z0ZICmJxeKQBHgBd2tWQA5oHDwCsnxGQAHgI+OCWm/D/lt2l/AQyCsIMSjRJAAAAA
        AElFTkSuQmCC
      </shape>
      <shape name='Arrows/4-4.png'>
        iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAAACXBIWXMAABJ0AAASdAHeZh94
        AAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAh5pVFh0WE1MOmNvbS5h
        ZG9iZS54bXAAAQBVVEYtOABYTUw6Y29tLmFkb2JlLnhtcAAokX1T3W7bIBR+FURvNmmxARv8
        o3qVA7bWi2xVGqm7dWzaWImNhcni5tV2sUfaKwxncVZNVYCLcw7fd37gnNu7oSvKrTRgLV/q
        NoG/f/6CoK4S+EQXaNFxuam/HLV8PH5dlcdtGVXw7jO4HeKh6RppCjA0u7aPhwQWlVrL2Mqj
        2YXgBDHbBKbjBfi+eABcaQmo481KhDFgzME+ZQx/AgRh4iJ72Az7MWUxCcB5QRtNV8/xUuTn
        WFZL4MaYLnbdw+HgHDxH6RcXR1E0+iBkZhGz/rU1xTBr+5vJg5B9qevO1KoFo16s1d4kEE4l
        NN1icXHc9s6pIKdUjTsUnYsd5DaNO6F7s5TP19H96rWT7lL2aq9LaeE3b0Jdp45Am038Tdf2
        U4qdUOW+ka25Fwm0N05VV7GfMoEFZandQmAczueME5xTmmUeRenk4z1uICghKQuFHzKMM2/u
        cRZGKQoQxWgekIl73/amaEs5cet/3OAqN+ZaFkbplVK7qQMeNsqofqM6wB8Z+PBUt5U69B/H
        7zlnKnX9Q1a5Vg04vW9cvxOfo5SgLOchFX7mYZySEIXY87kfRD5itu6/3OpN3fu9JeY+z6nP
        ERZBKDKM5wHFWZ6KMMUk49iHrs3E/a9TJpNtv1G89L1VLpMjWzsu2s7FH25UBPLX9yymAAAB
        wklEQVRYhe3YvU7DMBQF4BMEqENJl6obUsU7ICHECFOnliUhj8EzpclUGGBir0D0FUCR2KBL
        qyJVXcJAjNLGqa/t2OnAGfOjfLq2bxI7aZpil7NXN0CUf6Budh64T7nI84MjAB8AWiYxcRQ6
        m8cc6ir2/OAUwNO8fdZaNk+qtqGTDLlA8hDHUfgK4MqdPs8ai/dKcdsiNQfrQEovEttIpVVs
        E6ncZtaQ30l1oo1o9cEM2XO/xsZe6MI+6PmB6JJbAIX2UFV03yQjAP3P7k0VFm50gMZxgDrQ
        Cg5QA1rDAfJAqzhADmgdB9CBteAAATDrgbXhgC2NumpcJxkCQDpvnzvLZpd8H7eChnD3AC7c
        6XjWWLzpAQ3h+gDGAC7d6QsZWQB6fmAKxzKRQfIqeKAtK8exkJE84DWAh+wBJnAsJGQBGEfh
        KkM+qiCJuAKSDMwhB7JISdwaEgAXWdqoZZGKOPasCYBj3jnhj7vnB4f4bTu9spWtg8uApeco
        Wx+skqNOMiwgGS6OQiGO8PtQCPVjgTvcMjjVCCuYK//K84O/SmbH7uIoHJjCARKbRyy5Obli
        OJWhy2fbHJQG2s7Ob2D+A3XzA3VT5uq3CqRSAAAAAElFTkSuQmCC
      </shape>
      <shape name='Arrows/4-5.png'>
        iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAAACXBIWXMAABJ0AAASdAHeZh94
        AAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAh5pVFh0WE1MOmNvbS5h
        ZG9iZS54bXAAAQBVVEYtOABYTUw6Y29tLmFkb2JlLnhtcAAokX1TS27bMBC9CsFsWqCWOPpQ
        H0QNZFJCs3AbOAbSrSwxsWBLFCi6Vny1LnqkXqGUa7lBEZjkYmb43nzImdu7oSvKrdBoLV7q
        NsG/f/7CqK4S/OQvyKJjYlN/OSrxePy6Ko/bMqrw3Wd0O8RD0zVCF2hodm0fDwkuKrkWsZFH
        s43RCaK3CU7HC/R98YCYVAL5ljsrCQCi1ALPpxQ+IYeAYxNz6Ay82KexE6Dzwiaaqp7jJc/P
        sYyW4I3WXWzbh8PBOriWVC82RFE0+nCcmUHM+tdWF8Os7W8mD1z0pao7XcsWjXqxlnudYDyV
        0HSLxcVx21ungqxSNvZQdDZYxG4ae0L3eimer6P71Wsn7KXo5V6VwsBv3oS6Th2BJpv4m6rN
        pxQ7Lst9I1p9zxNsbqyqrmIvpRy4T1OzOQcI53PKHMh9P8tcn6STj/e4AQ9oCl7EvZACZO7c
        ZTSMUhIQH8g8cCbufdvroi3FxK3/ccOr3JgpUWipVlLupg542Egt+43sEHuk6MNT3Vby0H8c
        v+ecqVD1D1HlSjbo9L5x/U58RlKHZDkLfe5lLkDqhCQE12NeEHmEmrr/cqs3de/3hph7LPc9
        RoAHIc8A5oEPWZ7yMAUnY+Bh22Ri/9cpk8m03yhe+t4ol8kRrRkXZebiD3guBPrLBeI1AAAC
        WUlEQVRYhe2Yz04TURSHv9NT+Q8FujIxPoAu3BUo/3kATQghM040xsSFCxPDwoULFRMWmKDR
        hAWBaKIp7Ru49CkKLaUsiHGHKygUGuqCmRjQ0pnOEFjMt5m5c879zZc7mztXqtUqV5nIZQvU
        I+rcGKYVRN6bM1dXZNKpmrVozYrHYMO0XgGv7eFxJp16e7a/kUUI5BMbpvUSmI1OZIlOZAFm
        7We+8bWCAIZpvQDmouNr0Fw5CR1fo/Lj1pxhWhXgnZ98XytomNYMMK9j69By9LfQcoSOrQPM
        AzOXJfgcWNDRHNJ6+E9RWg/R0RzAgt3bEI0KPgPe60gOaSvXbJK2MjqSA/hgz/FMI4JPgY86
        nBdpry3nIO1ldDgP8Mme6wmvgk+ARR3Ki3QcuJ4kHQfoUB5g0c5wjRfBx8CSDm6IdLqXc5DO
        A3RwQ4AlO8sVbgUfAcuaLIh07XuWc5CufTRZEGDZzqyLG8GHwIomCxGJlRqWc5BYCU0WIsAK
        8KBefz3B+8BnHShoEHIOEiuhA5sKfAHM83rPE5wGvmr/pkp3cHIO0r2H9m8q8M0wrWmvglPA
        qvYVVXr2ApdzkJ49tK+oQMowrSm3gpPAqiaKKr27FybnIL27aKIY5URysp7gPSCtia1rEr94
        OQeJ76KJrSYgbZjW3VM1Z8tvmFYc+AU01QuM3NwhcvunJ4nj7A2Ot+NuWg+B65l06jec3m7t
        AM2uXrYdr3oWPJGT/9XO21Ff+X+SUNAvoaBfQkG/hIJ+CQX9Egr6JRT0y5UXbPh8sPL9TpAe
        NZHwlN8nfwDrI5LYbpHSfQAAAABJRU5ErkJggg==
      </shape>
    </shapes>
  </external>
</workbook>
